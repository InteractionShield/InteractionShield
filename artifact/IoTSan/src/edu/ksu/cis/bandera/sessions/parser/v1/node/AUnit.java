/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.sessions.parser.v1.node;

import java.util.*;
import edu.ksu.cis.bandera.sessions.parser.v1.analysis.*;

public final class AUnit extends PUnit
{
    private final LinkedList _session_ = new TypedLinkedList(new Session_Cast());

    public AUnit()
    {
    }

    public AUnit(
        List _session_)
    {
        {
            this._session_.clear();
            this._session_.addAll(_session_);
        }

    }

    public AUnit(
        XPSession _session_)
    {
        if(_session_ != null)
        {
            while(_session_ instanceof X1PSession)
            {
                this._session_.addFirst(((X1PSession) _session_).getPSession());
                _session_ = ((X1PSession) _session_).getXPSession();
            }
            this._session_.addFirst(((X2PSession) _session_).getPSession());
        }

    }
    public Object clone()
    {
        return new AUnit(
            cloneList(_session_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnit(this);
    }

    public LinkedList getSession()
    {
        return _session_;
    }

    public void setSession(List list)
    {
        _session_.clear();
        _session_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_session_);
    }

    void removeChild(Node child)
    {
        if(_session_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        for(ListIterator i = _session_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class Session_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PSession node = (PSession) o;

            if((node.parent() != null) &&
                (node.parent() != AUnit.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AUnit.this))
            {
                node.parent(AUnit.this);
            }

            return node;
        }
    }
}
