abstraction Range04 extends integral 
  begin
    TOKENS = {LT0, R0, R1, R2, R3, R4, GT4};
    DEFAULT = R0;
    ONE2ONE = {R0, R1, R2, R3, R4};
    abstract (n)
      begin
        n < 0 -> LT0;
        n == 0 -> R0;
        n == 1 -> R1;
        n == 2 -> R2;
        n == 3 -> R3;
        n == 4 -> R4;
        n > 4 -> GT4;
      end
    operator + add 
      begin
        (LT0, LT0) -> LT0;
        (LT0, R0) -> LT0;
        (LT0, R1) -> {LT0, R0};
        (LT0, R2) -> {LT0, R0, R1};
        (LT0, R3) -> {LT0, R0, R1, R2};
        (LT0, R4) -> {LT0, R0, R1, R2, R3};
        (LT0, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R0, LT0) -> LT0;
        (R0, R0) -> R0;
        (R0, R1) -> R1;
        (R0, R2) -> R2;
        (R0, R3) -> R3;
        (R0, R4) -> R4;
        (R0, GT4) -> GT4;
        (R1, LT0) -> {LT0, R0};
        (R1, R0) -> R1;
        (R1, R1) -> R2;
        (R1, R2) -> R3;
        (R1, R3) -> R4;
        (R1, R4) -> GT4;
        (R1, GT4) -> GT4;
        (R2, LT0) -> {LT0, R0, R1};
        (R2, R0) -> R2;
        (R2, R1) -> R3;
        (R2, R2) -> R4;
        (R2, R3) -> GT4;
        (R2, R4) -> GT4;
        (R2, GT4) -> GT4;
        (R3, LT0) -> {LT0, R0, R1, R2};
        (R3, R0) -> R3;
        (R3, R1) -> R4;
        (R3, R2) -> GT4;
        (R3, R3) -> GT4;
        (R3, R4) -> GT4;
        (R3, GT4) -> GT4;
        (R4, LT0) -> {LT0, R0, R1, R2, R3};
        (R4, R0) -> R4;
        (R4, R1) -> GT4;
        (R4, R2) -> GT4;
        (R4, R3) -> GT4;
        (R4, R4) -> GT4;
        (R4, GT4) -> GT4;
        (GT4, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (GT4, R0) -> GT4;
        (GT4, R1) -> GT4;
        (GT4, R2) -> GT4;
        (GT4, R3) -> GT4;
        (GT4, R4) -> GT4;
        (GT4, GT4) -> GT4;
      end
    operator - sub 
      begin
        (LT0, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (LT0, R0) -> LT0;
        (LT0, R1) -> LT0;
        (LT0, R2) -> LT0;
        (LT0, R3) -> LT0;
        (LT0, R4) -> LT0;
        (LT0, GT4) -> LT0;
        (R0, LT0) -> {R1, R2, R3, R4, GT4};
        (R0, R0) -> R0;
        (R0, R1) -> LT0;
        (R0, R2) -> LT0;
        (R0, R3) -> LT0;
        (R0, R4) -> LT0;
        (R0, GT4) -> LT0;
        (R1, LT0) -> {R2, R3, R4, GT4};
        (R1, R0) -> R1;
        (R1, R1) -> R0;
        (R1, R2) -> LT0;
        (R1, R3) -> LT0;
        (R1, R4) -> LT0;
        (R1, GT4) -> LT0;
        (R2, LT0) -> {R3, R4, GT4};
        (R2, R0) -> R2;
        (R2, R1) -> R1;
        (R2, R2) -> R0;
        (R2, R3) -> LT0;
        (R2, R4) -> LT0;
        (R2, GT4) -> LT0;
        (R3, LT0) -> {R4, GT4};
        (R3, R0) -> R3;
        (R3, R1) -> R2;
        (R3, R2) -> R1;
        (R3, R3) -> R0;
        (R3, R4) -> LT0;
        (R3, GT4) -> LT0;
        (R4, LT0) -> GT4;
        (R4, R0) -> R4;
        (R4, R1) -> R3;
        (R4, R2) -> R2;
        (R4, R3) -> R1;
        (R4, R4) -> R0;
        (R4, GT4) -> LT0;
        (GT4, LT0) -> GT4;
        (GT4, R0) -> GT4;
        (GT4, R1) -> {R4, GT4};
        (GT4, R2) -> {R3, R4, GT4};
        (GT4, R3) -> {R2, R3, R4, GT4};
        (GT4, R4) -> {R1, R2, R3, R4, GT4};
        (GT4, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
      end
    operator * mul 
      begin
        (LT0, LT0) -> {R1, R2, R3, R4, GT4};
        (LT0, R0) -> R0;
        (LT0, R1) -> LT0;
        (LT0, R2) -> LT0;
        (LT0, R3) -> LT0;
        (LT0, R4) -> LT0;
        (LT0, GT4) -> {LT0, R1, R2, R3, R4, GT4};
        (R0, LT0) -> R0;
        (R0, R0) -> R0;
        (R0, R1) -> R0;
        (R0, R2) -> R0;
        (R0, R3) -> R0;
        (R0, R4) -> R0;
        (R0, GT4) -> R0;
        (R1, LT0) -> LT0;
        (R1, R0) -> R0;
        (R1, R1) -> R1;
        (R1, R2) -> R2;
        (R1, R3) -> R3;
        (R1, R4) -> R4;
        (R1, GT4) -> GT4;
        (R2, LT0) -> LT0;
        (R2, R0) -> R0;
        (R2, R1) -> R2;
        (R2, R2) -> R4;
        (R2, R3) -> GT4;
        (R2, R4) -> GT4;
        (R2, GT4) -> GT4;
        (R3, LT0) -> LT0;
        (R3, R0) -> R0;
        (R3, R1) -> R3;
        (R3, R2) -> GT4;
        (R3, R3) -> GT4;
        (R3, R4) -> GT4;
        (R3, GT4) -> GT4;
        (R4, LT0) -> LT0;
        (R4, R0) -> R0;
        (R4, R1) -> R4;
        (R4, R2) -> GT4;
        (R4, R3) -> GT4;
        (R4, R4) -> GT4;
        (R4, GT4) -> GT4;
        (GT4, LT0) -> {LT0, R1, R2, R3, R4, GT4};
        (GT4, R0) -> R0;
        (GT4, R1) -> GT4;
        (GT4, R2) -> GT4;
        (GT4, R3) -> GT4;
        (GT4, R4) -> GT4;
        (GT4, GT4) -> {R1, R2, R3, R4, GT4};
      end
    operator / div 
      begin
        (LT0, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (LT0, R0) -> T;
        (LT0, R1) -> LT0;
        (LT0, R2) -> LT0;
        (LT0, R3) -> LT0;
        (LT0, R4) -> LT0;
        (LT0, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R0, LT0) -> R0;
        (R0, R0) -> T;
        (R0, R1) -> R0;
        (R0, R2) -> R0;
        (R0, R3) -> R0;
        (R0, R4) -> R0;
        (R0, GT4) -> R0;
        (R1, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R1, R0) -> T;
        (R1, R1) -> R1;
        (R1, R2) -> R0;
        (R1, R3) -> R0;
        (R1, R4) -> R0;
        (R1, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R2, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R2, R0) -> T;
        (R2, R1) -> R2;
        (R2, R2) -> R1;
        (R2, R3) -> R0;
        (R2, R4) -> R0;
        (R2, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R3, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R3, R0) -> T;
        (R3, R1) -> R3;
        (R3, R2) -> R1;
        (R3, R3) -> R1;
        (R3, R4) -> R0;
        (R3, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R4, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R4, R0) -> T;
        (R4, R1) -> R4;
        (R4, R2) -> R2;
        (R4, R3) -> R1;
        (R4, R4) -> R1;
        (R4, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (GT4, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (GT4, R0) -> T;
        (GT4, R1) -> GT4;
        (GT4, R2) -> {R2, R3, R4, GT4};
        (GT4, R3) -> {R1, R2, R3, R4, GT4};
        (GT4, R4) -> {R1, R2, R3, R4, GT4};
        (GT4, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
      end
    operator % rem 
      begin
        (LT0, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (LT0, R0) -> T;
        (LT0, R1) -> R0;
        (LT0, R2) -> {R0, R1};
        (LT0, R3) -> {R0, R1, R2};
        (LT0, R4) -> {R0, R1, R2, R3};
        (LT0, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R0, LT0) -> R0;
        (R0, R0) -> T;
        (R0, R1) -> R0;
        (R0, R2) -> R0;
        (R0, R3) -> R0;
        (R0, R4) -> R0;
        (R0, GT4) -> R0;
        (R1, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R1, R0) -> T;
        (R1, R1) -> R0;
        (R1, R2) -> R1;
        (R1, R3) -> R1;
        (R1, R4) -> R1;
        (R1, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R2, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R2, R0) -> T;
        (R2, R1) -> R0;
        (R2, R2) -> R0;
        (R2, R3) -> R2;
        (R2, R4) -> R2;
        (R2, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R3, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R3, R0) -> T;
        (R3, R1) -> R0;
        (R3, R2) -> R1;
        (R3, R3) -> R0;
        (R3, R4) -> R3;
        (R3, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R4, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (R4, R0) -> T;
        (R4, R1) -> R0;
        (R4, R2) -> R0;
        (R4, R3) -> R1;
        (R4, R4) -> R0;
        (R4, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (GT4, LT0) -> {LT0, R0, R1, R2, R3, R4, GT4};
        (GT4, R0) -> T;
        (GT4, R1) -> R0;
        (GT4, R2) -> {R0, R1};
        (GT4, R3) -> {R0, R1, R2};
        (GT4, R4) -> {R0, R1, R2, R3};
        (GT4, GT4) -> {LT0, R0, R1, R2, R3, R4, GT4};
      end
    test == eq 
      begin
        (LT0, LT0) -> {TRUE, FALSE};
        (LT0, R0) -> FALSE;
        (LT0, R1) -> FALSE;
        (LT0, R2) -> FALSE;
        (LT0, R3) -> FALSE;
        (LT0, R4) -> FALSE;
        (LT0, GT4) -> FALSE;
        (R0, LT0) -> FALSE;
        (R0, R0) -> TRUE;
        (R0, R1) -> FALSE;
        (R0, R2) -> FALSE;
        (R0, R3) -> FALSE;
        (R0, R4) -> FALSE;
        (R0, GT4) -> FALSE;
        (R1, LT0) -> FALSE;
        (R1, R0) -> FALSE;
        (R1, R1) -> TRUE;
        (R1, R2) -> FALSE;
        (R1, R3) -> FALSE;
        (R1, R4) -> FALSE;
        (R1, GT4) -> FALSE;
        (R2, LT0) -> FALSE;
        (R2, R0) -> FALSE;
        (R2, R1) -> FALSE;
        (R2, R2) -> TRUE;
        (R2, R3) -> FALSE;
        (R2, R4) -> FALSE;
        (R2, GT4) -> FALSE;
        (R3, LT0) -> FALSE;
        (R3, R0) -> FALSE;
        (R3, R1) -> FALSE;
        (R3, R2) -> FALSE;
        (R3, R3) -> TRUE;
        (R3, R4) -> FALSE;
        (R3, GT4) -> FALSE;
        (R4, LT0) -> FALSE;
        (R4, R0) -> FALSE;
        (R4, R1) -> FALSE;
        (R4, R2) -> FALSE;
        (R4, R3) -> FALSE;
        (R4, R4) -> TRUE;
        (R4, GT4) -> FALSE;
        (GT4, LT0) -> FALSE;
        (GT4, R0) -> FALSE;
        (GT4, R1) -> FALSE;
        (GT4, R2) -> FALSE;
        (GT4, R3) -> FALSE;
        (GT4, R4) -> FALSE;
        (GT4, GT4) -> {TRUE, FALSE};
      end
    test != neq 
      begin
        (LT0, LT0) -> {TRUE, FALSE};
        (LT0, R0) -> TRUE;
        (LT0, R1) -> TRUE;
        (LT0, R2) -> TRUE;
        (LT0, R3) -> TRUE;
        (LT0, R4) -> TRUE;
        (LT0, GT4) -> TRUE;
        (R0, LT0) -> TRUE;
        (R0, R0) -> FALSE;
        (R0, R1) -> TRUE;
        (R0, R2) -> TRUE;
        (R0, R3) -> TRUE;
        (R0, R4) -> TRUE;
        (R0, GT4) -> TRUE;
        (R1, LT0) -> TRUE;
        (R1, R0) -> TRUE;
        (R1, R1) -> FALSE;
        (R1, R2) -> TRUE;
        (R1, R3) -> TRUE;
        (R1, R4) -> TRUE;
        (R1, GT4) -> TRUE;
        (R2, LT0) -> TRUE;
        (R2, R0) -> TRUE;
        (R2, R1) -> TRUE;
        (R2, R2) -> FALSE;
        (R2, R3) -> TRUE;
        (R2, R4) -> TRUE;
        (R2, GT4) -> TRUE;
        (R3, LT0) -> TRUE;
        (R3, R0) -> TRUE;
        (R3, R1) -> TRUE;
        (R3, R2) -> TRUE;
        (R3, R3) -> FALSE;
        (R3, R4) -> TRUE;
        (R3, GT4) -> TRUE;
        (R4, LT0) -> TRUE;
        (R4, R0) -> TRUE;
        (R4, R1) -> TRUE;
        (R4, R2) -> TRUE;
        (R4, R3) -> TRUE;
        (R4, R4) -> FALSE;
        (R4, GT4) -> TRUE;
        (GT4, LT0) -> TRUE;
        (GT4, R0) -> TRUE;
        (GT4, R1) -> TRUE;
        (GT4, R2) -> TRUE;
        (GT4, R3) -> TRUE;
        (GT4, R4) -> TRUE;
        (GT4, GT4) -> {TRUE, FALSE};
      end
    test < lt 
      begin
        (LT0, LT0) -> {TRUE, FALSE};
        (LT0, R0) -> TRUE;
        (LT0, R1) -> TRUE;
        (LT0, R2) -> TRUE;
        (LT0, R3) -> TRUE;
        (LT0, R4) -> TRUE;
        (LT0, GT4) -> TRUE;
        (R0, LT0) -> FALSE;
        (R0, R0) -> FALSE;
        (R0, R1) -> TRUE;
        (R0, R2) -> TRUE;
        (R0, R3) -> TRUE;
        (R0, R4) -> TRUE;
        (R0, GT4) -> TRUE;
        (R1, LT0) -> FALSE;
        (R1, R0) -> FALSE;
        (R1, R1) -> FALSE;
        (R1, R2) -> TRUE;
        (R1, R3) -> TRUE;
        (R1, R4) -> TRUE;
        (R1, GT4) -> TRUE;
        (R2, LT0) -> FALSE;
        (R2, R0) -> FALSE;
        (R2, R1) -> FALSE;
        (R2, R2) -> FALSE;
        (R2, R3) -> TRUE;
        (R2, R4) -> TRUE;
        (R2, GT4) -> TRUE;
        (R3, LT0) -> FALSE;
        (R3, R0) -> FALSE;
        (R3, R1) -> FALSE;
        (R3, R2) -> FALSE;
        (R3, R3) -> FALSE;
        (R3, R4) -> TRUE;
        (R3, GT4) -> TRUE;
        (R4, LT0) -> FALSE;
        (R4, R0) -> FALSE;
        (R4, R1) -> FALSE;
        (R4, R2) -> FALSE;
        (R4, R3) -> FALSE;
        (R4, R4) -> FALSE;
        (R4, GT4) -> TRUE;
        (GT4, LT0) -> FALSE;
        (GT4, R0) -> FALSE;
        (GT4, R1) -> FALSE;
        (GT4, R2) -> FALSE;
        (GT4, R3) -> FALSE;
        (GT4, R4) -> FALSE;
        (GT4, GT4) -> {TRUE, FALSE};
      end
    test <= le 
      begin
        (LT0, LT0) -> {TRUE, FALSE};
        (LT0, R0) -> TRUE;
        (LT0, R1) -> TRUE;
        (LT0, R2) -> TRUE;
        (LT0, R3) -> TRUE;
        (LT0, R4) -> TRUE;
        (LT0, GT4) -> TRUE;
        (R0, LT0) -> FALSE;
        (R0, R0) -> TRUE;
        (R0, R1) -> TRUE;
        (R0, R2) -> TRUE;
        (R0, R3) -> TRUE;
        (R0, R4) -> TRUE;
        (R0, GT4) -> TRUE;
        (R1, LT0) -> FALSE;
        (R1, R0) -> FALSE;
        (R1, R1) -> TRUE;
        (R1, R2) -> TRUE;
        (R1, R3) -> TRUE;
        (R1, R4) -> TRUE;
        (R1, GT4) -> TRUE;
        (R2, LT0) -> FALSE;
        (R2, R0) -> FALSE;
        (R2, R1) -> FALSE;
        (R2, R2) -> TRUE;
        (R2, R3) -> TRUE;
        (R2, R4) -> TRUE;
        (R2, GT4) -> TRUE;
        (R3, LT0) -> FALSE;
        (R3, R0) -> FALSE;
        (R3, R1) -> FALSE;
        (R3, R2) -> FALSE;
        (R3, R3) -> TRUE;
        (R3, R4) -> TRUE;
        (R3, GT4) -> TRUE;
        (R4, LT0) -> FALSE;
        (R4, R0) -> FALSE;
        (R4, R1) -> FALSE;
        (R4, R2) -> FALSE;
        (R4, R3) -> FALSE;
        (R4, R4) -> TRUE;
        (R4, GT4) -> TRUE;
        (GT4, LT0) -> FALSE;
        (GT4, R0) -> FALSE;
        (GT4, R1) -> FALSE;
        (GT4, R2) -> FALSE;
        (GT4, R3) -> FALSE;
        (GT4, R4) -> FALSE;
        (GT4, GT4) -> {TRUE, FALSE};
      end
    test > gt 
      begin
        (LT0, LT0) -> {TRUE, FALSE};
        (LT0, R0) -> FALSE;
        (LT0, R1) -> FALSE;
        (LT0, R2) -> FALSE;
        (LT0, R3) -> FALSE;
        (LT0, R4) -> FALSE;
        (LT0, GT4) -> FALSE;
        (R0, LT0) -> TRUE;
        (R0, R0) -> FALSE;
        (R0, R1) -> FALSE;
        (R0, R2) -> FALSE;
        (R0, R3) -> FALSE;
        (R0, R4) -> FALSE;
        (R0, GT4) -> FALSE;
        (R1, LT0) -> TRUE;
        (R1, R0) -> TRUE;
        (R1, R1) -> FALSE;
        (R1, R2) -> FALSE;
        (R1, R3) -> FALSE;
        (R1, R4) -> FALSE;
        (R1, GT4) -> FALSE;
        (R2, LT0) -> TRUE;
        (R2, R0) -> TRUE;
        (R2, R1) -> TRUE;
        (R2, R2) -> FALSE;
        (R2, R3) -> FALSE;
        (R2, R4) -> FALSE;
        (R2, GT4) -> FALSE;
        (R3, LT0) -> TRUE;
        (R3, R0) -> TRUE;
        (R3, R1) -> TRUE;
        (R3, R2) -> TRUE;
        (R3, R3) -> FALSE;
        (R3, R4) -> FALSE;
        (R3, GT4) -> FALSE;
        (R4, LT0) -> TRUE;
        (R4, R0) -> TRUE;
        (R4, R1) -> TRUE;
        (R4, R2) -> TRUE;
        (R4, R3) -> TRUE;
        (R4, R4) -> FALSE;
        (R4, GT4) -> FALSE;
        (GT4, LT0) -> TRUE;
        (GT4, R0) -> TRUE;
        (GT4, R1) -> TRUE;
        (GT4, R2) -> TRUE;
        (GT4, R3) -> TRUE;
        (GT4, R4) -> TRUE;
        (GT4, GT4) -> {TRUE, FALSE};
      end
    test >= ge 
      begin
        (LT0, LT0) -> {TRUE, FALSE};
        (LT0, R0) -> FALSE;
        (LT0, R1) -> FALSE;
        (LT0, R2) -> FALSE;
        (LT0, R3) -> FALSE;
        (LT0, R4) -> FALSE;
        (LT0, GT4) -> FALSE;
        (R0, LT0) -> TRUE;
        (R0, R0) -> TRUE;
        (R0, R1) -> FALSE;
        (R0, R2) -> FALSE;
        (R0, R3) -> FALSE;
        (R0, R4) -> FALSE;
        (R0, GT4) -> FALSE;
        (R1, LT0) -> TRUE;
        (R1, R0) -> TRUE;
        (R1, R1) -> TRUE;
        (R1, R2) -> FALSE;
        (R1, R3) -> FALSE;
        (R1, R4) -> FALSE;
        (R1, GT4) -> FALSE;
        (R2, LT0) -> TRUE;
        (R2, R0) -> TRUE;
        (R2, R1) -> TRUE;
        (R2, R2) -> TRUE;
        (R2, R3) -> FALSE;
        (R2, R4) -> FALSE;
        (R2, GT4) -> FALSE;
        (R3, LT0) -> TRUE;
        (R3, R0) -> TRUE;
        (R3, R1) -> TRUE;
        (R3, R2) -> TRUE;
        (R3, R3) -> TRUE;
        (R3, R4) -> FALSE;
        (R3, GT4) -> FALSE;
        (R4, LT0) -> TRUE;
        (R4, R0) -> TRUE;
        (R4, R1) -> TRUE;
        (R4, R2) -> TRUE;
        (R4, R3) -> TRUE;
        (R4, R4) -> TRUE;
        (R4, GT4) -> FALSE;
        (GT4, LT0) -> TRUE;
        (GT4, R0) -> TRUE;
        (GT4, R1) -> TRUE;
        (GT4, R2) -> TRUE;
        (GT4, R3) -> TRUE;
        (GT4, R4) -> TRUE;
        (GT4, GT4) -> {TRUE, FALSE};
      end
  end
