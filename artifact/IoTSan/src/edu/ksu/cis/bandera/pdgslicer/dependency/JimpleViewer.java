package edu.ksu.cis.bandera.pdgslicer.dependency;

import javax.swing.*;
/**
 * Insert the type's description here.
 * Creation date: (00-10-24 10:33:14)
 * @author: 
 */
public class JimpleViewer extends JPanel {
	private JTextArea ivjJimpleTextArea = null;
	private java.awt.BorderLayout ivjJimpleViewerBorderLayout = null;
	private JScrollPane ivjJimpleTextScrollPane = null;
	private JLabel ivjJimpleTitleLabel = null;
/**
 * JimpleViewer constructor comment.
 */
public JimpleViewer() {
	super();
	initialize();
}
/**
 * JimpleViewer constructor comment.
 * @param layout java.awt.LayoutManager
 */
public JimpleViewer(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * JimpleViewer constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public JimpleViewer(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * JimpleViewer constructor comment.
 * @param isDoubleBuffered boolean
 */
public JimpleViewer(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G0CF5E3A9GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BA8BF094471524C27928B31533FD32C3DDE41FFDE5A738223305A19804A0B896D8862D793A8218F2792E14142BACBB549D15A29792FA97C98890209F8736414898BBA2DED6ABA123C51275C1C2A0E9A5AD16A29C23CA185D1D7D406C4733A33472115C3D57BDBDB3DA6D8AC2552974B4532F3BDF3FDF3FFE7DC6246A4463C5E6CB95A166A2227EB41A89297EBDA1C7BE28EF62B8EB2649CC8CBF9F8214
	130E4AC2F836C01F3259E4AEA36F9517C05B856D232F1A4CC7603D121CA84EBE85AFA956C9033ECEE57E1C6957396F9CDFE78FED2F6CAD0567C100E1404581F2B2F17D57FB0F2A78F4E89FD45F914C96C23C73F04CA3762386FC49BCB64E25BE3751B13F6ABD2676E7C09B4764GEC1A27535CCB397BFA50213633CB6692257E0F1683381601BE8747F3EC6E287AAC830ED0913B496212E6144DF5535FAAFA47ECB7E3E3B6CFB0E6F38BE12FA88B3628579F13029ED136F94528883830E7222929B7980ACA62C8D0
	9C97E512779C721CEDAF2174C02750E67C3D535F222EFF7D6D9F917B6B6E147C154DE7FCB54C5779AB5C57DA1CBF9FE91F6CABD567A9504EGE0EB5E6863EB56ACB01967AEC05C1ADA9CFB9D5E63G8FAC603C7CFB9B67C58AACA65BEB7D16C3A9F8A9D840F8287A114E8BD9751865DDEA7B8A875A4F85FD8A40AC008C00BC00820077294F194E017B128E3752998905A2610EE8740264157BA3DED1027726A668D1F1DF081E086CA50479558BF6EB92FEB894AE1C6CD33A9FDCA55C8F66D81EA133CE4854360932
	8D7BAED90E2AB42C8BF55918DC4F1CC7391C008FG4CG18833088E053C2AE57114633F7122BA72C08F2D81006465CD1C1D6AE0C85A570A3D53E1A3E6964CB86EC5E393FF99E534B5C33C63D14AC99316CC922179959EE4BF6D59F254F6BFAE1EBC7D22EEDFDFE2ABD68DEFE9E7D30530EFE588E6FE655C7993E1F62538CF866632FD23F45761350D732087BEDDA8D17217421A7C9067F0B24B2DCFFA9EC1196B1FEE6AECA346D5FB7E3BC4984FC9EC0BE40CE00E30BCDE68700F3B1372F3B3176AE7D56E530AD1B
	7B3E633F61A94695D968894794A16C91C784B9A838A5B1C654B1279C483BFB523C53F4BFF9E00DCBE298A20E920C04013A90924111E2ECCC3D239C4748A26D9D8E06C4D8A094A51CEE132392773590D37E90758A0A280FE07D979C284BDB4288D08482701E3E98F53E0946AC895EE781B0DDB5FE0A38B7203DC3534BD2C785BC7B4031C5292929AB68C1B684F9022F7F7CF90CA562ADB12CF429D1D20929FD4B4E6F5575620BE8BC67D0BC6E11CEE0BC2661D71DAFE7F820E154B26FDFCF7B85C511036EB1C59C92
	95A598766B7337D0DEE21336DF0CB059ECD6743152AC137994C0C396174F53D4E9104F99095C9C0B8E2365D4BD5DC7636CE598FFBD0B1F01BDF6BC93E7E6E9317ECB6E27BBFE768C5934F0A8291F5233B10B7967022C443DB6C4E96AEB3CD67B655F386FB94C4CCA3EB72746166D773C466E3B9843747E4499547BD660E9874051A5DC6F0FB5D5337DF6C10809FC078D4AE0B1512BFB999B1B561C5A473E571C5C471EE8CE6EE3BFE81E5E071EEDCE66C32CEFE1B31EAD11713041A717B4D750BD9C8E0B14E9ED8A
	E1B946BB43280BE0B828DC8DFA7D22B2947CC6A4644BA568DB3F20FB508E6FDDCB38AF0DFF44FD49BB72B4E97FCBE752736C71F249123E0459B9F3096ECB0C2716CFD16722A406C0D11D1131302246823A3FD53C9ADF9A2C4947B6D9519FEF0A936A38D6EBB141B8A20D091AEC1942FE54319C8C0129F0432AF95E23FD46BCEFAD7007B961F6F816E41B4CEC6E55D2DC5718CCB1FF59E2C3FCB50CEBGF0E6F3FF49323EEB58272A23F4C6A40929DD376F19B2341F78759824EBA2EE64BECD06E74ED4A4740D2872
	2876BD0372C80698604DC6F90A6BF82E05E784439D27385F41C6EAAB64E7EEFF19B1A7155639135A8EE1EEB633D9F6F662F9F5087A44D64097E83257590CB12AA3960BF80274B8D06D701F27D15FB40F3DA15C92623658B878B4242AAE81E630FCF10F936922FCE4A94F97CF7AD0578EE83BG82CB79FAEF58267A494FEC7B60698B4AB148F33CE21C6B6CAD9B4A0E670F0A66F9D97DA4DD7CE6C6CADD4CD84AF41036B4D197FF20BA4E84FC0E461B2F365C208B48A16138750325B8BFD5765D4CEF5576D1FB9177
	DB4263DE29531857EC825A85CB7518C916194CD5GB54BF49C4BDF9E217AEAD9467217A28D7F84453B8CF8165754D0BC363D50173B0C1F33FD75A8177547A6F34B0F39DC7FEABFE0104B95890695CD262F6AF06FC56420BF986638BFD39CE450B49831336AA3EAE3A7503C8E40F0BF9DC01C826DD99A2E6B8A62B2201D236176B5A2EE933437E938DFF891D7389C7225657CDCCA77A12E9D5A239A6E8794F79B5A699A4E661B6EEC41397C3DFD791D4F2B64675725E957A8B23C5F4DF91588CC4F2EFA34E9DCEB8F
	537604CA936224936D6006406945C36485545B95EA0765A0D79EG9B774EC0B15DA79311B1B0ECA69D679964F1328B5A23GB381663C40F28DB66F5A955C33A1A19E8C0D055861C1671E7E825758816F05BF61E3BFEC24E3613019BC76BC35EDBB0CF37E04475FF963B8568749A6040A212868A125AF52D8A7F21E62B0F6B6C086C09EC001364E7DA398E3D96C9E8EAA1268945C22447AFEA7D569FDF0AC8FF9E488529808E6D37A1BFDD5869D8F3F48E40D43131D9D93134E0E0DEABF4901BD89E04D419A45DC8C
	AD2A7ED78DFC824F30B8DE0D214FA60CABB6ADA854582D55707BD95DF9EB75594F6C27F9EC7AB7E20CCDE55993A9E3D3B4C73DD7284F349F7628FB7B7EC1FEAF4F063E6DB9DC2FBF37211FE8319899EAEA3A9041734A490C4F627106419255C72DABF8BCFE5005B43D503E8D10360267845F6C6677771D2797125B45B71356922CCB7EE849D84178DC3BC20F2585AFBFE6E1FA7BD3132E37DF1F33A56A2D8B2E8EE13CA4545457B5B4B6B84E1EEBE834D66B6F20BFC62733D927136FBD1E1A8EA83F4E8153D4192D
	E2094AF769CA48F9D6A26EAB51688FC8F3290590640D754F1E540F319F69697D4BA675233E8E959A7B37CD6AAFB24CE73A7D749A576D7039AC627876E04ABA4D6C15EA3E25BE5B3F5FC362BB3B0B55B35817628C26FB0349DF66C779B13FFCF3A5376DBF559B6BC433C7AFDA7627D85F7992DBD7FAC937ED4B2A4754DA167F6271646B6B9BD03343BC2DF6147192773D23CE743DFCE86F84284A657C55BA0CFBA567F837451C02BFEBAE634B111BF80E6736503BA660E76572736EED4727709C91EE28376A0B5E20
	921169C5G10AEB99295E5E502E1E91626467C87876F2D0E724F77B8EF5334736602BC5939134FAF169394DDC1FD2E4DE5B901D9439F24782D86BC0BA75FF571F872A674B9DF6639422FBEC73F4A04F69EC0BE40CE00E32BCCE647AA2E4BF3676D648E350B61C8548997A849F02DE672550977D6DF5AB34C7DB66D5927C8C06ACE6D372BD43FD51FF95F6D21F8A65F6CB614AF9D7A9681EC85588ED0325AE42EDE4D651B55ECE57221BBF4A80A6089504C148B0777879D0D0799136D30BFD9FE5030DA3757E5437B
	287A9E0567CC75FD0E7A4CD8BDB5C7E17C7F329D634BF2685F8A309D20B48F4E29BC4E7B7A66BB568DAF4627299BAE1C367E674C1B4A97733359F4BFDF4FCB2C41BDC271513C449A5C87CEDE031B81FD79F95C7F8EDFC0EBB3D95EEB79B8551E85B1FAA16C8C3AEF4061BBAC7835B9269664C93BEF332D2C76EDECC15D615DB8A8C841EF6815E68886067DEA7EC94F484BA61379CB934FC99BDDB416C07B3609671A7B2F90ED3FD6995E9FF55DEBFD636E6343427F57B5181EAC2D296B9FFBDB1357BF8E35A62FFF
	9CEE1D3E7EF13CB5F57D63D42B317E417C63E4A75A708130C58640DA00FC009DA66E7F4F351EE47E1FE45FDE747A454E882D18AAFC7D075BD24B1A5EF667BA6BD3EDF8CFF5C794A592C27A9C7F43B634179209D2A443E536210E60DA95D058D0DE87E823BEA67AA8DA75BBFAF6D73DE2B21FFA057BE2BA455921FDD9437D3582F123503E2D6156D15C83504E50F05F8F50BB823457EA3857FA91178F6D42B59CE76B63F73023EB38CEFF5B1EDAC7C59D497DE1FFC7F2FFA86F183E667AEEC7AAFFE17C19B47E3A56
	707D781093EBC7D12D1DCE5B333576A9675D6E9924F1EF7B72733BDE63DE6E06AC77ADF621DC377CC2145D330E39F8FE1B31065F1586681800B6462B0D49566C797B4E54762C6B3C334FB7F552FA8D786A70C4D4E43836CEDAB37079E22236373ABA4BB4DCCF4C950985B1622AFC7A11CF8596E2B97E0DAE2249B95FCFEBBF91D9744BF851A56A3DF2B5757FBC10E313A66F4395988FEEC172967488925EG79BAEC4E3395BC775C214DF93382F36E28AC7AC4D9963D6C662A2EE12E447127561A4C7635FC7C52C0
	A1658722869D33016E25D1688FE8E37E23375C40C707947407B176E8F4CB359CB89D66ECDD0B380BFD555358BCF7AD73C5B6B6FF5A31275631310C9706536F449D32A840FE2077E11353F8BFF12CE3B5146B6B389CE7DD68ABF60D567FE8EDE6274AEE5DCEE9CDC8CB3B07F5C62408ECF3CB0267A66BDFD971015A2FDE8FECC37817076018EDF85045693EE5207B3DG4ECBF147F3609D71B36DEE7802D31F77CAEFCD623CEEB0DA4DC9AF1C77913FADAA894170C9FAC72F2BBF4D66FC54F7B7BC32316EBEBC0F86
	A23292A0BCAF3545F9DEDAF0A903ECCD9B37141364F929225A6871F57AFDC537191956F5BAC57C264B6B5D263FCC3A5B6BF7AC4D286CFED5584F6F769B5771BC6A2DFE74175275A6F38D0093408B9087F8G60C9006C75BC9E9475235ED25D0DD8B101AAC4867DA9AC5E6D6DCF15A7EE823A856B2746D13656AF7BD3471E5F745FB976948FA4BFEFCB87261E376583494F5BA383467316610E29F4D15681A12451BDB900310255517A05306027E795BB0B2A295E4986B8ABB7707373A19BBF1F2C9B781EEA6C2734
	E1DFCC0EE703F43E8B460D8230FA5853B6DE0F1A05B481328136826C5C406BD141C15D677F4EF6A2516769BE2C2937B7D8D5B82D7A499A9B7713E39BF9BDE4CFEDE2BD84F3EE9B61750C733509759073247E1B350975103D136AA10F56A656C378FC66C79BEDC6BF9A863E829B27BF03191E5F22325C0631389E43ED2338B440FDCC789E92BE41FB061A73DF8DFA15G439F0B9F507117C57491E8337FE3AAA86B871A99EF132218CCAA265679DE4C3CD1745E2A9B0A0594761062G1D5CC30A4611FA8FB14781A6
	62D11074CF04504F2D74E792ADAD1EF5FCE773CFB37E5CD5E5A116A93462517F5D35EB97C26CEB72D7E281A278C109A8241C8577EA7C16DF9D452FAEC07D60E48FB0BFF5645BE57FF0F64CC20A3BC931CF10228181A853CF93CEE2714494723E9327544214DA8FCE292593072202C7EC3EC6767AE43F1B8ED70865DA77B5A0C2DB48CB09136CD38218CD63912E10A3BAA597868935239955C048AE00A87CE8E2E00C3A8AAC9F189428D7BC71594F73DE9F096DA645BD64DDBCEF07C419DE55C4EF1720707FA968A6
	FB23783D824F6D9ED298230F2218B2A101DCD53EAF70FBDBCC913D9DBC0984C98FB37E461420D4FBD90885948CAA4DCED298467FFEA0952CDB827356329BA1635C5C51CEEDD72A9A3012720BD4EC9A154AA507BE7E30B7FF51EEE269A67B2408606D96BC90BFFB48DEA5A00B31C0C4724623ED0CD049B87FAC369B483D2F090F425AE8D867CC5F0CBFBA7B401B873AC1DDF11954521128D21BB6425B9990E4D8CA14FB947CEF0E08FCCA6B7B56874AA726CBC7C6ADF030B0A1D1758763D185381205F08C322B90F0
	D01D40816F5288597E71E57B43CF7F57D71410BED5A1A7F40B7B45C8283643678B06C50DG688F489F57486398DB42180A780307FBDF5D6586FBF7115DA13B1D7E2D23FF6B71EF9D4554D1CCDDBDA8F19B1976A731BFCE9D2EC2C1778F852589F8692229G47D36781BE8FD1BE517C36EE302032656D177F653516ED85A0F5373AE54088E57A28013110DB146F4BF878787E34B76EC79BC551D562C877B8DB3618FAFEDEDE9EFABE6179C276C5E3FD53DA75D54AEF810BB62B752B4D0975CDC795BAD14996389BEE
	51EAD615E7C86ADA49D0C810A4C510EEF6043DD8B739B021087A1D6C73AA249F63E354CEB5072FC23EEF98667C9FD0CB8788EDF7F53AB491GGC8AAGGD0CB818294G94G88G88G0CF5E3A9EDF7F53AB491GGC8AAGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGEE91GGGG
**end of data**/
}
/**
 * Return the JimpleTextArea property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JTextArea getJimpleTextArea() {
	if (ivjJimpleTextArea == null) {
		try {
			ivjJimpleTextArea = new javax.swing.JTextArea();
			ivjJimpleTextArea.setName("JimpleTextArea");
			ivjJimpleTextArea.setBackground(new java.awt.Color(204,204,204));
			ivjJimpleTextArea.setBounds(0, 0, 516, 18);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJimpleTextArea;
}
/**
 * Return the JimpleTextScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JScrollPane getJimpleTextScrollPane() {
	if (ivjJimpleTextScrollPane == null) {
		try {
			ivjJimpleTextScrollPane = new javax.swing.JScrollPane();
			ivjJimpleTextScrollPane.setName("JimpleTextScrollPane");
			getJimpleTextScrollPane().setViewportView(getJimpleTextArea());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJimpleTextScrollPane;
}
/**
 * Return the JimpleTitleLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JLabel getJimpleTitleLabel() {
	if (ivjJimpleTitleLabel == null) {
		try {
			ivjJimpleTitleLabel = new javax.swing.JLabel();
			ivjJimpleTitleLabel.setName("JimpleTitleLabel");
			ivjJimpleTitleLabel.setText("Jimple code panel");
			ivjJimpleTitleLabel.setForeground(java.awt.Color.black);
			ivjJimpleTitleLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
			ivjJimpleTitleLabel.setPreferredSize(new java.awt.Dimension(87, 25));
			ivjJimpleTitleLabel.setFont(new java.awt.Font("dialog.plain", 0, 12));
			ivjJimpleTitleLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJimpleTitleLabel;
}
/**
 * Return the JimpleViewerBorderLayout property value.
 * @return java.awt.BorderLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.BorderLayout getJimpleViewerBorderLayout() {
	java.awt.BorderLayout ivjJimpleViewerBorderLayout = null;
	try {
		/* Create part */
		ivjJimpleViewerBorderLayout = new java.awt.BorderLayout();
		ivjJimpleViewerBorderLayout.setVgap(0);
		ivjJimpleViewerBorderLayout.setHgap(0);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJimpleViewerBorderLayout;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("JimpleViewer");
		setBounds(new java.awt.Rectangle(0, 0, 519, 350));
		setLayout(getJimpleViewerBorderLayout());
		setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
		setMinimumSize(new java.awt.Dimension(0, 18));
		setSize(519, 350);
		add(getJimpleTitleLabel(), "North");
		add(getJimpleTextScrollPane(), "Center");
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		JFrame frame = new javax.swing.JFrame();
		JimpleViewer aJimpleViewer;
		aJimpleViewer = new JimpleViewer();
		frame.setContentPane(aJimpleViewer);
		frame.setSize(aJimpleViewer.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
}
