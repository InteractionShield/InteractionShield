package edu.ksu.cis.bandera.bui;

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Bandera, a Java(TM) analysis and transformation toolkit           *
 * Copyright (C) 2000   Robby (robby@cis.ksu.edu)                    *
 * All rights reserved.                                              *
 *                                                                   *
 * This work was done as a project in the SAnToS Laboratory,         *
 * Department of Computing and Information Sciences, Kansas State    *
 * University, USA (http://www.cis.ksu.edu/santos).                  *
 * It is understood that any modification not identified as such is  *
 * not covered by the preceding statement.                           *
 *                                                                   *
 * This work is free software; you can redistribute it and/or        *
 * modify it under the terms of the GNU Library General Public       *
 * License as published by the Free Software Foundation; either      *
 * version 2 of the License, or (at your option) any later version.  *
 *                                                                   *
 * This work is distributed in the hope that it will be useful,      *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 * Library General Public License for more details.                  *
 *                                                                   *
 * You should have received a copy of the GNU Library General Public *
 * License along with this toolkit; if not, write to the             *
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,      *
 * Boston, MA  02111-1307, USA.                                      *
 *                                                                   *
 * Java is a trademark of Sun Microsystems, Inc.                     *
 *                                                                   *
 * To submit a bug report, send a comment, or get the latest news on *
 * this project and other SAnToS projects, please visit the web-site *
 *                http://www.cis.ksu.edu/santos                      *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
import edu.ksu.cis.bandera.specification.datastructure.*;
import edu.ksu.cis.bandera.jjjc.*;
import edu.ksu.cis.bandera.annotation.*;
import edu.ksu.cis.bandera.specification.assertion.datastructure.*;
import java.awt.*;
import java.util.*;
import javax.swing.*;
import javax.swing.tree.*;
public class AssertionBrowser extends JFrame {
	private JLabel ivjConstraintLabel = null;
	private JTextField ivjConstraintTextField = null;
	private JLabel ivjDescriptionLabel = null;
	private JScrollPane ivjDescriptionScrollPane = null;
	private JTextArea ivjDescriptionTextArea = null;
	private JButton ivjGotoButton = null;
	private JLabel ivjNameLabel = null;
	private JTextField ivjNameTextField = null;
	private JButton ivjOkButton = null;
	private JLabel ivjTypeLabel = null;
	private JTextField ivjTypeTextField = null;
	private JButton ivjErrorMessageButton = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private JTree ivjAssertionTree = null;
	private JPanel ivjAssertionBrowserContentPane = null;
	private JSplitPane ivjAssertionBrowserSplitPane = null;
	private JPanel ivjAssertionPanel = null;
	private JScrollPane ivjAssertionScrollPane = null;

class IvjEventHandler implements java.awt.event.ActionListener, javax.swing.event.TreeSelectionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == AssertionBrowser.this.getOkButton()) 
				connEtoM1(e);
			if (e.getSource() == AssertionBrowser.this.getErrorMessageButton()) 
				connEtoC2();
			if (e.getSource() == AssertionBrowser.this.getGotoButton()) 
				connEtoC3();
			if (e.getSource() == AssertionBrowser.this.getAddButton()) 
				connEtoC4();
		};
		public void valueChanged(javax.swing.event.TreeSelectionEvent e) {
			if (e.getSource() == AssertionBrowser.this.getAssertionTree()) 
				connEtoC1();
		};
	};
	private JButton ivjAddButton = null;
/**
 * PredicateBrowser constructor comment.
 */
public AssertionBrowser() {
	super();
	initialize();
}
/**
 * PredicateBrowser constructor comment.
 * @param title java.lang.String
 */
public AssertionBrowser(String title) {
	super(title);
}
/**
 * Comment
 */
public void addButton_ActionEvents() {
	Object o = ((DefaultMutableTreeNode) getAssertionTree().getLastSelectedPathComponent()).getUserObject();
	if (o instanceof Assertion) {
		Assertion a = (Assertion) o;
		AssertionProperty ap = (AssertionProperty) BUI.property.getActivatedAssertionProperties().iterator().next();
		ap.addAssertion(a.getName());
		/*
		BUI.propertyManager.updateEnabledAssertionList();
		BUI.propertyManager.getEnabledAssertionList().setSelectedValue(a, true);
		BUI.propertyManager.setVisible(true);
		BUI.propertyManager.requestFocus();
		BUI.propertyManager.getPropertyManagerTabbedPane().setSelectedIndex(2);
		*/
	}
}
/**
 * Comment
 */
public void assertionTree_TreeSelectionEvents() {
	Object o = ((DefaultMutableTreeNode) getAssertionTree().getLastSelectedPathComponent()).getUserObject();
	if (o instanceof Assertion) {
		Assertion a = (Assertion) o;
		getNameTextField().setText(a.getName().toString());
		if (a instanceof LocationAssertion) {
			getTypeTextField().setText("Location Assertion on label '" + ((LocationAssertion) a).getLabel() + "'");
		} else if (a instanceof PostAssertion) {
			getTypeTextField().setText("Post-condition Assertion");
		} else if (a instanceof PreAssertion) {
			getTypeTextField().setText("Pre-condition Assertion");
		}
		getConstraintTextField().setText(a.getConstraint().toString().trim());
		getDescriptionTextArea().setText("".equals(a.getDescription().trim()) ? "none" : a.getDescription());
		getErrorMessageButton().setEnabled(!a.isValid());
		getGotoButton().setEnabled(true);
		getAddButton().setEnabled(a.isValid() && (BUI.property.getActivatedAssertionProperties().size() == 1));
	} else {
		getErrorMessageButton().setEnabled(false);
		getGotoButton().setEnabled(false);
		getAddButton().setEnabled(false);
		getNameTextField().setText("");
		getTypeTextField().setText("");
		getConstraintTextField().setText("");
		getDescriptionTextArea().setText("");
	}
}
/**
 * 
 * @return javax.swing.tree.DefaultMutableTreeNode
 * @param root javax.swing.tree.DefaultMutableTreeNode
 * @param object java.lang.Object
 */
private DefaultMutableTreeNode buildTree(DefaultMutableTreeNode root, Object object) {
	if (object instanceof Hashtable) {
		Hashtable table = (Hashtable) object;
		TreeSet ts = new TreeSet();
		for (Enumeration e = table.keys(); e.hasMoreElements();) {
			ts.add(e.nextElement());
		}
		
		for (Iterator i = ts.iterator(); i.hasNext();) {
			Object key = i.next();
			Object value = table.get(key);
			root.add(buildTree(new DefaultMutableTreeNode(key.toString()), value));
		}
	} else if (object instanceof AssertionSet) {
		AssertionSet set = (AssertionSet) object;
		Hashtable table = set.getAssertionTable();
		TreeSet ts = new TreeSet();
		for (Enumeration e = table.keys(); e.hasMoreElements();) {
			ts.add(e.nextElement());
		}
		for (Iterator i = ts.iterator(); i.hasNext();) {
			root.add(new DefaultMutableTreeNode(table.get(i.next())));
		}
	}
	return root;
}
/**
 * connEtoC1:  (AssertionTree.treeSelection. --> AssertionBrowser.assertionTree_TreeSelectionEvents()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.assertionTree_TreeSelectionEvents();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (ErrorMessageButton.action. --> PredicateBrowser.errorMessageButton_ActionEvents()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2() {
	try {
		// user code begin {1}
		// user code end
		this.errorMessageButton_ActionEvents();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (GotoButton.action. --> AssertionBrowser.gotoButton_ActionEvents()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3() {
	try {
		// user code begin {1}
		// user code end
		this.gotoButton_ActionEvents();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (AddButton.action. --> AssertionBrowser.addButton_ActionEvents()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4() {
	try {
		// user code begin {1}
		// user code end
		this.addButton_ActionEvents();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (OkButton.action.actionPerformed(java.awt.event.ActionEvent) --> PredicateBrowser.setVisible(Z)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.setVisible(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void errorMessageButton_ActionEvents() {
	StringBuffer buffer = new StringBuffer();
	Assertion a = (Assertion) ((DefaultMutableTreeNode) getAssertionTree().getLastSelectedPathComponent()).getUserObject();
	for (Enumeration e = a.getExceptions().elements(); e.hasMoreElements();) {
		Exception ex = (Exception) e.nextElement();
		buffer.append(ex.getMessage() + "\n");
	}
	JOptionPane.showMessageDialog(this, buffer.toString(), "Information", JOptionPane.INFORMATION_MESSAGE);
}
/**
 * Return the AddButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getAddButton() {
	if (ivjAddButton == null) {
		try {
			ivjAddButton = new javax.swing.JButton();
			ivjAddButton.setName("AddButton");
			ivjAddButton.setMnemonic('a');
			ivjAddButton.setText("Add to property");
			ivjAddButton.setBackground(new java.awt.Color(204,204,255));
			ivjAddButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAddButton;
}
/**
 * Return the PredicateBrowserContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAssertionBrowserContentPane() {
	if (ivjAssertionBrowserContentPane == null) {
		try {
			ivjAssertionBrowserContentPane = new javax.swing.JPanel();
			ivjAssertionBrowserContentPane.setName("AssertionBrowserContentPane");
			ivjAssertionBrowserContentPane.setBorder(new javax.swing.border.EtchedBorder());
			ivjAssertionBrowserContentPane.setLayout(new java.awt.BorderLayout());
			ivjAssertionBrowserContentPane.setBackground(new java.awt.Color(204,204,255));
			getAssertionBrowserContentPane().add(getOkButton(), "South");
			getAssertionBrowserContentPane().add(getAssertionBrowserSplitPane(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAssertionBrowserContentPane;
}
/**
 * Return the PredicateBrowserSplitPane property value.
 * @return javax.swing.JSplitPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSplitPane getAssertionBrowserSplitPane() {
	if (ivjAssertionBrowserSplitPane == null) {
		try {
			ivjAssertionBrowserSplitPane = new javax.swing.JSplitPane(javax.swing.JSplitPane.HORIZONTAL_SPLIT);
			ivjAssertionBrowserSplitPane.setName("AssertionBrowserSplitPane");
			getAssertionBrowserSplitPane().add(getAssertionScrollPane(), "left");
			getAssertionBrowserSplitPane().add(getAssertionPanel(), "right");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAssertionBrowserSplitPane;
}
/**
 * Return the PredicatePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAssertionPanel() {
	if (ivjAssertionPanel == null) {
		try {
			ivjAssertionPanel = new javax.swing.JPanel();
			ivjAssertionPanel.setName("AssertionPanel");
			ivjAssertionPanel.setBorder(new javax.swing.border.EtchedBorder());
			ivjAssertionPanel.setLayout(new java.awt.GridBagLayout());
			ivjAssertionPanel.setBackground(new java.awt.Color(204,204,255));

			java.awt.GridBagConstraints constraintsNameLabel = new java.awt.GridBagConstraints();
			constraintsNameLabel.gridx = 0; constraintsNameLabel.gridy = 0;
			constraintsNameLabel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsNameLabel.insets = new java.awt.Insets(10, 10, 0, 0);
			getAssertionPanel().add(getNameLabel(), constraintsNameLabel);

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 1; constraintsNameTextField.gridy = 0;
			constraintsNameTextField.gridwidth = 4;
			constraintsNameTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameTextField.weightx = 1.0;
			constraintsNameTextField.insets = new java.awt.Insets(10, 10, 0, 10);
			getAssertionPanel().add(getNameTextField(), constraintsNameTextField);

			java.awt.GridBagConstraints constraintsTypeLabel = new java.awt.GridBagConstraints();
			constraintsTypeLabel.gridx = 0; constraintsTypeLabel.gridy = 1;
			constraintsTypeLabel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsTypeLabel.insets = new java.awt.Insets(10, 10, 0, 0);
			getAssertionPanel().add(getTypeLabel(), constraintsTypeLabel);

			java.awt.GridBagConstraints constraintsTypeTextField = new java.awt.GridBagConstraints();
			constraintsTypeTextField.gridx = 1; constraintsTypeTextField.gridy = 1;
			constraintsTypeTextField.gridwidth = 4;
			constraintsTypeTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsTypeTextField.weightx = 1.0;
			constraintsTypeTextField.insets = new java.awt.Insets(10, 10, 0, 10);
			getAssertionPanel().add(getTypeTextField(), constraintsTypeTextField);

			java.awt.GridBagConstraints constraintsConstraintLabel = new java.awt.GridBagConstraints();
			constraintsConstraintLabel.gridx = 0; constraintsConstraintLabel.gridy = 2;
			constraintsConstraintLabel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsConstraintLabel.insets = new java.awt.Insets(10, 10, 0, 0);
			getAssertionPanel().add(getConstraintLabel(), constraintsConstraintLabel);

			java.awt.GridBagConstraints constraintsConstraintTextField = new java.awt.GridBagConstraints();
			constraintsConstraintTextField.gridx = 1; constraintsConstraintTextField.gridy = 2;
			constraintsConstraintTextField.gridwidth = 4;
			constraintsConstraintTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsConstraintTextField.weightx = 1.0;
			constraintsConstraintTextField.insets = new java.awt.Insets(10, 10, 0, 10);
			getAssertionPanel().add(getConstraintTextField(), constraintsConstraintTextField);

			java.awt.GridBagConstraints constraintsDescriptionLabel = new java.awt.GridBagConstraints();
			constraintsDescriptionLabel.gridx = 0; constraintsDescriptionLabel.gridy = 3;
			constraintsDescriptionLabel.gridwidth = 5;
			constraintsDescriptionLabel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsDescriptionLabel.insets = new java.awt.Insets(15, 10, 0, 10);
			getAssertionPanel().add(getDescriptionLabel(), constraintsDescriptionLabel);

			java.awt.GridBagConstraints constraintsDescriptionScrollPane = new java.awt.GridBagConstraints();
			constraintsDescriptionScrollPane.gridx = 0; constraintsDescriptionScrollPane.gridy = 4;
			constraintsDescriptionScrollPane.gridwidth = 5;
			constraintsDescriptionScrollPane.fill = java.awt.GridBagConstraints.BOTH;
			constraintsDescriptionScrollPane.weightx = 1.0;
			constraintsDescriptionScrollPane.weighty = 1.0;
			constraintsDescriptionScrollPane.insets = new java.awt.Insets(5, 10, 0, 10);
			getAssertionPanel().add(getDescriptionScrollPane(), constraintsDescriptionScrollPane);

			java.awt.GridBagConstraints constraintsGotoButton = new java.awt.GridBagConstraints();
			constraintsGotoButton.gridx = 2; constraintsGotoButton.gridy = 5;
			constraintsGotoButton.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsGotoButton.weightx = 1.0;
			constraintsGotoButton.insets = new java.awt.Insets(15, 10, 10, 10);
			getAssertionPanel().add(getGotoButton(), constraintsGotoButton);

			java.awt.GridBagConstraints constraintsErrorMessageButton = new java.awt.GridBagConstraints();
			constraintsErrorMessageButton.gridx = 4; constraintsErrorMessageButton.gridy = 5;
			constraintsErrorMessageButton.fill = java.awt.GridBagConstraints.BOTH;
			constraintsErrorMessageButton.weightx = 1.0;
			constraintsErrorMessageButton.insets = new java.awt.Insets(15, 0, 10, 10);
			getAssertionPanel().add(getErrorMessageButton(), constraintsErrorMessageButton);

			java.awt.GridBagConstraints constraintsAddButton = new java.awt.GridBagConstraints();
			constraintsAddButton.gridx = 0; constraintsAddButton.gridy = 5;
			constraintsAddButton.gridwidth = 2;
			constraintsAddButton.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsAddButton.weightx = 1.0;
			constraintsAddButton.insets = new java.awt.Insets(15, 10, 10, 0);
			getAssertionPanel().add(getAddButton(), constraintsAddButton);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAssertionPanel;
}
/**
 * Return the PredicateScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getAssertionScrollPane() {
	if (ivjAssertionScrollPane == null) {
		try {
			ivjAssertionScrollPane = new javax.swing.JScrollPane();
			ivjAssertionScrollPane.setName("AssertionScrollPane");
			ivjAssertionScrollPane.setBorder(BorderFactory.createLoweredBevelBorder());
			getAssertionScrollPane().setViewportView(getAssertionTree());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAssertionScrollPane;
}
/**
 * Return the PredicateTree property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTree getAssertionTree() {
	if (ivjAssertionTree == null) {
		try {
			ivjAssertionTree = new javax.swing.JTree();
			ivjAssertionTree.setName("AssertionTree");
			ivjAssertionTree.setBackground(new java.awt.Color(204,204,204));
			ivjAssertionTree.setBounds(0, 0, 526, 299);
			// user code begin {1}
			ivjAssertionTree.setUI(new javax.swing.plaf.metal.MetalTreeUI() {
				public javax.swing.plaf.metal.MetalTreeUI setAngledColor() {
					setHashColor(Color.black);
					return this;
				}
			}.setAngledColor());
			ivjAssertionTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
			ivjAssertionTree.setCellRenderer(new DefaultTreeCellRenderer() {
				public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
					super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
					setIcon(null);
					Object o = ((DefaultMutableTreeNode) value).getUserObject();
					if (o instanceof AssertionSet) {
						setText(((AssertionSet) o).getName().toString());
					} else if (o instanceof Assertion) {
						Assertion a = (Assertion) o;
						setText(a.getName().getLastIdentifier());
						if (!a.isValid())
							setIcon(IconLibrary.errorIcon);
					}
					return this;
				}
			});
			((DefaultTreeCellRenderer) ivjAssertionTree.getCellRenderer()).setBackgroundNonSelectionColor(new Color(204, 204, 204));
			ivjAssertionTree.putClientProperty("JTree.lineStyle", "Angled");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAssertionTree;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GD58429A8GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DD8DDCD4D55A17184AAD5A342830ACA951ACA9B1292C282C5844DD6AF5DBF7575FAE3D6B6E3A1B3FDDEBE9234D5E652D4B17222260C64917B9AA6AD004DF08042820FC0C00C2C1CA653EB1B297989DE646190B8CAE627B1CF36EF3664E1DBBFC389B3F5F631D73BF67B967F91E731C2F671E99056C4D21E9C94959021014A648FF871284E159F9C1387970437FC0ECC9D7C01220785B8234C178784BD4
	F846C3DE7CCF831232045F1426C3BA35BBA0A9716500240D707983E1E96972EE7860271DE8483B79FFA72E9D3E1D280F301DD5B45D3CBA831E6B0152212DE2A0F7B7E93FFBF50E0C37C0FA3D7C19D0D232A0947610B23F7ABCC701C74965D640B38372D3AD244CB52B8B64FCABE0BA20F9C00BFAD8596570DCCD253B50DC0E75244F904C7FD82BDBC75AD2540F54E4E13C8E79A9ACF9A41098A2C5583029841E15AD673B8F0B663E12732E3E12CE0B2B642C49E6961D261233FD160A0A9627E836F41AA47128535E
	6F921D40CE6594AA52E99D02B0835256F384F3D7905B944267CA2036F3A86B9BA7AAE5D9BADEFFD450BF136DD75608F3CC46C567BC32D66EBD182CBBCF6A1FC9EDCF7832A15D844474D819BC329E55AE90DE3258EDAABD5EDA0DFA441CC7BD42CBC9BB02B5A0A987E83795F157FE029BA15D81643622FE3FBB027AD9FB1E9016E6666AB27D68B7414A741AEB7568E7ACBE181CCBFD4B18C37CA301345B8B3E85548264G1AG14CFFDBAE563A7702CBEAB9D3377765AED558E47D12B59F942EE962D709974BCAB49
	5817E2275DE996846637E995459A72A04D687576D9C2CC3753827AD9C87243027B7DED3AB48D5DEA6A5E8D0C126BD8586B512D40C66C16FE1058AD9E70A4AA0BA0B0BC17629DB68F4E7AF9087A91C987C1DE0E9D6D9CECC0D9B2EE8993A657276AD6E94852F23FDE97E6E7B2C459BD32B09BEF4DA3B6DE86F82AA3A029G2894288DC8F2200DCFEC5CB7120D0F5BA451E9B3D9DB7B4EBACCCE69E81F458A3EA65BFA766A61EC2DC50C6F59B173B13B4C58276C2395F726EB5A45B1B9DBB741416CB14361318BEBFB
	055F36E39C3E3E311E77211E0E09B8876B43940EFFC271658A1C756DA3F4EC11F4A264F5DC00BE2065DF236523AF3072EBF9BDEFD3FC2982E7758CD01C24D31D81C9BDC02CFF67651379B396524B008497788FD0B9D09BD00F8B7BB8E4632ED10E2396C57FB25EAFF2BE022768161C2663B617E432F50A27CCCE0B692CD5F489F219EFF208DD4FFA71FDC747F7A734D1AF5AE0E6A2539154EE6A954119DC2CCCCF8E717BCE27C8F35BAC3DA2B4506B9030DEC74E8770341ADC52D78EB3CC4B1E92AC5F1DC3FC6222
	6994548895406739AEE22F82BADF0F074FE1AE34556B8584CB04F43604F6F9AB07AC3C0D605C223522224652C944B0B98750C7579F544353G65C300043E00A4B3D08C506E0B81C921C08997793C5F0EFE39628F8F8BB13727E97AA51DBF7A190F1D69D77B65E65A1E8E70B020E82025C0296E0024C2209AA0339B57E6DD45B8622FFD3E7ECAE4D3E302C6B9C2899AE515E4D671054A6509BD08DD18AC77D3D956EA702F5340D679E9EB43B0F26078D726B365E71ABC46D8BFFF7BB199ABBA30D3A850BCB776F5C9
	2E1E0D0123A61708DE5F6C8407954D1E1EE7E5BF4DA3F50B97C51BD4A3BAC4D8D9ED12CB76393DF92BBD63214B4EFD351C62E4FEBC868E6B6278613C8D8C07BA14238B736BE83EC9121C1633FD1258AACA1245566D61BFC9E5F1F9CD3DAED957FFEEA63AAE869D63010481547517F99FA87C3A49EEBF5F67E8A3A3D69E9F19EB48D848067245835807BB76133DDF8BCF6F26E9CF7E5C5276917A07700EE5BE77DD93FEBAE29BA9D7D93F270D57774366180E4BB459E7D6493E45727FCE732D20CBB0D09450D2200C
	CBE807AB7B5B854F38CED3708F57F66E18E48C21ED24A85AA075EB0D2F510CABB5B19F79F13EFF9F7FE93E360F7FB2DF5B47DF4D9F5E077F102F6543ACEFF9BE514F5EEFD30C09B773493C5CE93759C4BAB0B90BBC565FE8A3FAD8EC966934455CADCA2D16CBA24C271708EF6F23F3FFA9FCB6DE423939FF9B4E4D66D38F883B7F79F620563EEE421B1BF42117188FC7DE724C4DCC263F961031A6DA45DEB054B1FB1FCDE2788A3A2E4838AB05E26D2BBA6129B7B41FBF5AA7C9F6DB31092AD1429EAD22334B6E6C
	954D06F3260B2692D33FD4C23B21241AE657124FC57A4FBEBB2CD71FC70ADD22F44A623240C8B6FCD3F42AE837405A3BF743B734BDDE3E4DA90A45927C538A02313635ABF4A8B93EEBD3F2D0B9DC86E8E60FA037232FBBC55B29F5BA6D4E93224BE56A963DB554EEC574A97FDD352A0D3D58460D6923EAC3FD4499D39B0FE5FFCB5B6015783317CFABA6A507DFFB6D155BF9F47BFF468FFC44706387BBB75751766A6D12FDB4B66B6665FCEC358FEDF5F3C58D331559BC1AAACDD84C2746D236E6CD5013F1348846
	57B2A061DF38E6C91BC8BE2ED97242FC4CEE152D8BF96D7FA2637B7441EC45184D79970BCB2C677901DE7921F27EF2F8327C54CA2DFCE190732F554C4F6679AB8FE9659BF87E75070617EF0EA6FFA567AFBD2C155FB208F6B2FD1CC566D271C21F88DBF13228B70A83381F7E789F2A3CD3A6EB1FE71F6E78182CA1D645FE00611D1B3567B64BE63287B84F6B6F5D3CD2A07BEDD6A71B0BA3CC24CE0753528B5BA732411163BFBB56A863BFE6101F440A4643F3B290732D466DC497358F99AF937E5DE5989B0A0472
	31C04B8759FE2578B233E75690A917404B85839E8E94FB193535442B5CC387305C99C8CBC041C32CDC441032DCCFB916DB826995C0B9D7D83962AB4AF2DBBE47F2ED00DB010264F221F23918AB24DC830F9D6D621809E2FF0185FBC1AA1EEBCFE4A9E3DCE7E6E7EB469E88E50CE3756B47294F7BBF5AC26A2D823CE59C7A4BEB1B15FBC130353D53C20FDBF25F5F2ED72EDF8C3BCB3F861EDD96278B4E7EE6510D7EF32F1E48CA4EE3B2AC7BC0CB3DD68C2156EC116CCE5CEA9F6B27D341B13E281F32087D326EF7
	6ED5464C86AB5F89DC6BC7F7332C33CE217B32520349CC0E191F9E9A2D9CED76E3F0B4B542D0D0C9043132A78FE23FC5C3DB8CBBD809D8A24722B8D69A005821C308D9B976A70E05F16C7CE1446282B03E77AE0D5950789ED9965CA52EFE58CBD5D4B4541133B3631BC0776FE43F17FD8D466B7EA7030C61A6C81B018601D86C606BB20CC1848396FB8D4EB3DF9B1473CCEAA078B7D0CBA00E4DF9E530DC8AE3DF3050A75652FA3D97AA74755FFDD4A5379BDE93A1AC3CED0BE68CB16B993D4E9C487AB9A8D091C3
	7CDBD77299A0265F268399329FAE02B299BA546F0613EA7DEAA02FC7077A698E2C7268A74BFC17EDAB998BA36EA4D08F21C529C77B1AB51AFA449ECF518D6A187CE1BA0F9E712F4DCB0E3B8F633D3F60FA44C399433528479F8714FAF4G2E831AF1AD6AF1281C605EFB976C03A7AA8A090E235833B099A616238CD1D0FF8217617085ADDB96DF07B22CA87735652C56BCF87A5FE1E0EC2B61F3EC338A6AF3DF07ED7EF729D61B913C4D591F7B36E97D164C03FE37A0820F736E751AEBDF5D6BF72E0D3E0E755762
	6B54F36D3B5B4898CCGBC7DFA1CEB8B3610F3904E35DF020DCD36EED8E57919EB8B119D56D3B97D729652AEDDCF850CDF14EDA7FA97C01D65C0ADC0BDC063F99BDFED9DB1DEDB6B9EA6DE7B6C413144DDE7DC0F675E2A4A3170C5F13E6746443710739DBDB4963E251C6FAFE362DB41799C07474217B19E79EEDBC378746335E39F25AA5CB89EE34036F5446F4F0CD747125D94370ED7471205F5B80F8FC25E925E7EF7E5A349DD7383EF9998DF6F08FCBDAABEB646B2DB091FEA2CCFEC4C89787EEF56BA657EEF
	5C8F585EAD8C1EF3FF006B5F848399C3E4CCAE7C8146E903F610FDD57A8D81C905C015C06DC003C0A1C0D1B760B8183A7560086300AD74EC96B8260EA648F658F6C0ED07389B3C7556365F9E9F3E9235EF296AE1F6F9A5C7ED172C9B8312CA010CB722DD1EBBC96CC276C09DB722DDD28C44AEA1100E840A85DA86149184EB85D0D3905AA5E12B569EC84BAE3E9BA0CFEC126998F71536795308363186E979D6C45BC6ED5FA20B16EC3FD43752FE3AA0E63F88F8C687217DB6DDCA176B0C8B42F1F2C7795569B24D
	07CF2DCB76CD5EFCCC063E8B580745B7218CAD1FDF1D8C7F67432716412CA943077BD106411B500F0E9591AC925251B7214FFC310D4469F15DEA31DBEC1200EB56FB5B48194F6E34F4DBEC082594922C536E24C1BBB94E3D5DFFBC31F63BF6BC31F13BF6BC710B6D43474C3F5E6EAF5E48625B3F20FB77C520DFBC9043CED7A2167AC34496F3AC07E3DF9FC22C18E3AB8FA3D645316BB9564631F03AAF6F01F49047D25692AC1424B9F6CD864162A09D7FC3748DE99DB9EBA7727490CD13BDB9CB2FDCB7D2ECDCCD
	242E5116155FBF0D390D314463B751722FC99F8A9A315D13F03891B066F4FB59EA39CC2DE4BF31C74079612DA2BFE7239693F8AE73795756611AD2F8B31E0D6E5BC957DAC8CBC0C1B773355B209ED7E110B797A896E8494D3E76134F4CBB7C7B7A5DBB34FDFD6A8EB246DC76BEE72728766787F76470BC4FECFCDC92FB09D9D819B914DFB2B93BC51F7170A465E7F97E78DF5861EF4C30FED970D1A69DF3F0D8F051852246A419647E78660022BF0E11F3A11B0B5FEBD54E4589B733B3E4410400245D93F0AEDE13
	0B7DE11C007DB130157447B8C807GC5CC407EF871243ABFE2A0AF8EA89EA8F5A20C53095EFD42F4DBE7705F9F59866D7E48B3786F0FAD06117B6393037F7E58E39839BFAA8C7E7A03597C03F2254DBDE3203BF6137698E86DF45A2DD6B292841C7FAB5D388E96CFC45B6F99A036B7C3FA90A8F8A25AFE6BA5FF7B41F0A8B3EF226FD8E0F23E6CA567BEBE17DC3A202EEF9154318CA891A86B96585F5D62DDA72B6F7A4F157515727A72762B6BAB877EA6208EA089E87CADDA3EE1ACA27BE8B7CFB75174G3727D8
	3D1E77D52D4DACAFFEACCE77BADDC77ECB9EA38C3351B5E397B05F150C58DFA8B69BA66C2FD290F350F5E4G9A5B46F9B751B5E3BB14B94D4B5DC33159C98CE3B6F8E18D19A34DE217294F8ACB235DA5B6BB64AB94440E375073719A6C5B4937E06CE8F6BFD96B3B1C26DEF009D60758A9045FCA4A662D45F11A8369E220A6A0ABD0502DF81E1E14C16A10AC92BD2FA65CCA6E87F6111025AC1350C16C270E5502F7CBF411862FE37D34FC1D321F4A03212DE056AF9D701402FD7D081DFBBEB2903F9C9F4C4EBDE9
	9C5FC271498A1C1D07E66C4438C18464E55F4657E0FA26F0C3BA08E3EFD3AC9452919C7B066E0322A03D08E3F3DAF12DDEF69B5A742E1282BF634DE135D04559D8ABEB43D8DE766DB856CE7453189C244DC0033763D84B4CD55AA8987099374BF738603970F6FFB67AEC9B3D9FF4BB3345C60ED7D33C608E8F4EECF4054E33A45D86F9D9A128672B74FC918B69A59C5B51CC639910CE1D04580D944B023401E30D7B50C6159C3B1E5EC78D02F468A454315A2D54B1F21237CEB1137C69B80D4ECFF113546762D994
	DFBEC9FDAEBEB0406FD8C1DE471DA85367748C908D69B80E5D3691E50F6758448B68AF59F7A176EDBF7A0B01E3D17D68AF259CBB540F7599B9D6F292ED914231BDF49F9E8E69F99C3BC431C510DE4A315FD0AC9E526913911B4A6DDD403196EAEFAB2447CD46717BB60DC3A8DC34643445E636774388A53736A4D7C94D71561666565A6F1ACFFEF72C89BE30D858EF85E5ACCC187C295FD8D870E479BE1D7CDC715697014C772B689E1770AC013C1C3B89963BD6993FA3B2CEC9E66796167F1ED7BED98B0B84E57E
	6E8CE5BE11F5DB2AB27F2CD7FE1A021F6975693778CE212D6CC941501964779EEE475D72BB8579997646970191F14713D9BD3B4A1576097C5FF782137C5493A573475C6D09954AE70075746E99117B9E6C4372ACFACF8152C60EBD3E81FD4C4AB147CE6C7FF1776058AA2073D998A943311D94A36F4948F918E18F6F545A4F931E316C715594A67333B666EB361176EF540F7E6259933CC0F56B35093DF61B25132DFF3F2258EF08196F41B110D1C44ECC92EC76587A3501EC1BF01F32013C53BAEB6ABC5F6D3477
	594C380E8652F5A09E6AC8842A1CC2309F376A07114DB0C5297F1FAF8E97C753CD71B74FBDC7570610A96A75AE166261D3546BDDEBBF2EF773A02FB0144F5B3968DB63B9961A073E954E313C82742D059C5B3E99FDEBE9A87A4C3EEDC41F2CFBE16E832A81BA8364868A860A84DA8814G14F19F6CA56EC33EFA4AD783E9B3108EA88CA89AE8A9D06AD410F9AAFB1FCA5E511277250C6F5A2D919AF6F34BEDAB5BA1ED2F17E53B9A1FB248FC4132CEA315DFB8CC99A6FB24266CEB65FC725E156C63487A0BF7952F
	767E9A0EA7B2070DF457EC3DB07CDDCAB69E92CE7A0E2935F43D7F8910F1AAFF3F546CBD265ED30C297B1A35475413341EF628438C34F8AA1D2F7755486DCF182AFD7FFE2DDCAFFDC78AE56682FDA827E327327110445B2EBDC9ECAC5A48B586335CEEC4A92EC37AB07471F6B70E0FD20E0539516FEB42508FE78E90BD9DBC7DA8CD13FB82ACFDE8E02C3191A4D267C8E5D89B272E3A0D51789533DB4BA56DBE6B217B25A010B584081D9B42B76239A19A3045C0AB00F22685A4158349FDFD814FC86D00B19F79BB
	899148757E016E11FAA0CF1A063E50560F3E90BA4D57B6E9AADF0804B2B15318AF50186EB40FAF30B64E1C44FEDFB68D7D56385F573F3F23588B449FF839097B3D7DFB49BE0FFF7FED3F362D561711FAB22603AD2623CECFF27F2E196E2B935E67473B4A6DD046BA5D23533869EA7F6EAE75756FA16E5FC153B11EFB9345C2A19DB59D6339B3F7FD8A4FD326F33EB7A0GECF15A61B4A98DB0145E90127DEF6A5A2B7BCE462AB65CEB854F1AA634B72D70FBFFA3CE36CD227C5C3D640BC072E43A3C331F78DB717D
	30A78232826900C200A26EC75D7E3A0B48C85EE200785512E46A6C21B7D77065863944610149A118551DF700C8AA5F555E3D5D1FFD20068658C3B71FBDA7F6CAED26EE5E9FF96BC94C7B2C5DC983BD15B3683EFEBD9F9FA0DF9CD0966005B3D89C0C71B5E791BE2BE9405EA7A1DFD7967269A0BD99A89AE8314C477A7A0FF4AF988FD8A2106181FA4E5A1923E1D36F713D311670610DC306851A098D54E7F7FE00653CEF9A48F327FD27FC7EFF305CB396E634EE0627CD6C57734B9F476CD63B5330F7F7E9B1257D
	7B0B64322F35921FEE850DFB380F143851C71657078B31D211EE039F9FF1BC40FCE372831EFDB4F93239BB191F3996BE00F373FC0AA5C23A60C144DE219839ABC16E8DB06C6B7E2B1DDF574B752BB1521E779C6E7C375A501A4715FBE966BF4D396887658FB23FEB012779C126ABAB33A08F4B8C829E8C948534D0AE43FC6C985D93AE83AC8148B813468CB76BE5BE7DCCDFFDCBE50C7573BD6924EFC9CC3349F4D634F2BC3FF21D0C37413CDAE7912DE61EF75FD94253B660D071BC5438CE46FDF99AEA497E091E
	E41DA60BCDE21CAC6F56028F3C72BC5CACBF32065CB12C91DD1DCE0B03F8BFE5E6F9B50E8F3D733CE2282CCC4F963286F8EE54A23E40C16EDA7A5ED2467C8374FC4DEF4D8AF87F731AED4AF36B04192CBFA2E7623D17EA23B2BFC64E0F6779179A3478D343B1FFCE1D96FF8E4F3F2BCA0B3F18679F2E54622F6279E70EE87137C1BEFBA710F3C57DFE165E3B027C41F01C9337B653F9C644F96607958237F7553E514CB3AC6EF06BBE0C0186C35D1B853667A6987B0BBF620B7158A639BEA04FCD85AE655CE4FE7A
	839D0959EA4DCD31614C7F8B9E724CCD7A134FA7B359671792D93ACCD697711F718F9199835CE4FF5176900E2F275CB83EE29F729DDFCB9ED20E2F3F1612B161F5CB1D4BBF3D52E3339BB60EE4335D25E833D7B6224D629F42D84D1A9CF52C6634D72C26B2C79D2BA13671645BF254311ACDDE311A509CF52C8679197C277B29BFF423BFCCB96451EDEF7F687D615AFE544D7070D87D217F3027CD57C9E5BFB26C62FEAA2389E50CBC62A99FB2861F7DB377590EB14B98D465E973B6AFDFE37B1ADBCA09FD79BBA5
	36351373A6517BF464BBB3961355F2093ECCE8050236EE36BFBAD3CD72C3C026C82045C04B0104D9386F5A341F5C0DA45F94755DF3551A3BC50CB3E2FBC2197FF7F22B4AC67ECEE9D6995DFB5BE1726CA575A37ED199D9E7A53B03028C4B276F0B1D166E9E09954577F8F41FEE953BA84C62A8191998AFAEG5D5AE6E11CBFCDCF76046AB8FF895B70D5D454CA1DBD2279283C7D137B72F4A65F0F4F42187F35347EE8C84781A54C426FA0DDCA41B9A63168B1417A47824DF8E441DDEBF59991725EB842B3471CA9
	46FB22BF4C425F8530C2FED8844A7F4712FC257C4489ABAA183CCDEC7349E47EC5964A9C9701B227EEA0F5E64F06F5G28E6B61E63B20FF97CCD5CB99A9FE73A3EDC261CCF097C7EE22FE7E6B39D474D765E6BB11FBCD2230767BC480B83929E01798A28982886289D4871887A679B6586417F1907994233CBE0F13E5CFE3D06CCC8C10FA86762B95B491864F331E227407213F72DD766539B89983B6B4FC51F8B05BA97BF026F461F4D453E481A03FD71BAADEB04F48710FB8E5E63FEB38F7BFD82E0B1F3305F77
	F4F83D1FE27DDE6F34180F1A3AD9473336BE4F473604C8EC2BBB1F54D98E6996201EC86C7727EBBD7D1E37F974F31BF9B34EED63A2F12DBF3BB58D4726006B6D658C25FF4C0D4A75FB96189B497AE0E92437FF4877C13A7C5C8721FBBCA653935B702EFC4123E8336D86BF6F74786611713A0D485B76A876596C864402B87627BA4422B976CA95E2099C6B2BC42C74B144EEBD021815E3ADD778F7859E433E1AFD193E9703F482D04663F826895927BC339782DE7E787071A6B6367EDAC76295CDD03687A888A88C
	E8AE50C22025C0AB00B266423E8E28922885488C64869A8FB499A8E2AE0FB99CAC9AE67C498E6999005C3F6EF013F14B46E71D2993F886CA68AF8208CD76FE729D30233006D8D93E2108794F78FD4AF7B2CB0BD2F5A9FE7CA7FA2E7C9BABF3556F2CFE4F6FC624BE013E1ACFE3FEE43DE0367D65C625EDAB21DC4B93435B16715D502F64B3830FFBD4FC71DEFD9984BC21A370B15B1B2B7D2F35672BC7DEEB25EA7A9DA0D8A349790BE18355745EDFD717CB64EB7AD0F596470E3BDA6CAE8B196A186C9FE60E94BB
	0AD469A25F3F9D116FE3CDDB1D9911CFCD6C7D4A3BF4FDDE7804A75E4670E43A2E46A9F0B66F5E1809736EB248EBFA9263EEBFB51239A7825231C0CB0192018A1E027177940E098F0E6E96C6380B5BE6F7B49187D7DCF3E47A85E7DD5D6F2A5CF715FC3F9EB31FFCDF1D6E9D1A1ED25BB300626DCF296D39E6835A538CF9B1CF21BDBFED20313FA8B8A781D901F4C0A1C091D1E84FD374FE113FB966CB3B1D0633481D9418E2144B3D6C3F8DB57E474997B523781D139A6DBDE9C70D6F1ED42C515E131E2FD16EC9
	656FE54A75BA79C5C806DF2CA17BA696BBBCE132193A695E134DD5E57DE4FC9E9349EF73E09FDE4E3D3AB1F86308FC5AE3B0FAC4BEED1FB1513DCCF4145AE74ED1FCE1145AE75E4AC51F09033C2A27F16DFBA76F6AFCBDAD7F6A788E0F190F6975EB3A4F8AFBDA2D6FD20AC7BC2D5637B79F750D02BC7DB3286F2E2D4A76F50007BCB31A357E3AC6BDBC4321EC8C50F22054E7E1AF8D349B2886684C33B846126B06FBF740E3460A3145E4FBE61B16ED5C4F4A5F5F03E76833DA3EF75968F5CFC8D5A68652F11AFC
	0FB5E83597AF17CD1D877A4D53627BCB1D122FD8D5268A52ED1AFC3F2C52EA2FC7AEBB884F891AFC173C3E7F9426AAB39752311AFCA1C7345ADBA217CD00E77AF3DAFCDFDD994EC78B1E737597660B5B07084F6DFECEFD6FEA97452B1ED35F3BFA7CB21EE9DAA0AF72B9FC37BA0B46B7F21EE7659996C9315DB2467CECE53D7F39F8DD7D48F371C7755AF3F1C13D6FDC3C25DEFBAE5ED96FBB97975713BDE1B76CD75BF939BD9C7B1AE3E534CE021D361869FB8E06D7D23988EE9459210761C729DC7D94EB1731FA
	8576B55ECF2DA773BA285CE3675F2D78221E6CCB3BACD62B7C9DC0DA46E203ED18E7ED22B2DA9CA6055C5FF10C484D660239CD242E26677939391E44F57C0DF7729DA196A5C27FDA66F52F2F836A111E9FFE8EE2BE7046C6748B929BE458DB9B51AFC83C11E177767B7A4F74FE257FB0ECD529EF390CD2E5B9F62FFD5E876B282D2C96B2E951DFA363E365FD6202726774AC4F6709197F4EBB1C512DA58FFE2FED303E7D15517F987B2DD17BDE7CEBC66D6F643CEE9C7EB7FE5EB67A7F0D1FC42372B7FE646F37EC
	70587BFA45672C8D5F3F6D0B3E57B6184E258D7EEDFF30E164792D26C1FBFEEBE8701D5F1A9B3467372F9A14739B533DBB4FE3EB0762733B395F3F5D7F11777D37715BFC0FCEFFD2FCF665FF7FED87FD2FED30B92EEEAB4EFB2694449A37623C774FE46C7B090D7E7DAF24F1E47F3B37D15B7F6EEF74753F70C6ED7FFB2451F7FDFD1C566B943BADF61B722C73F42356D907697773EDF89FFB7C73384FA8AB44FBG419CCB25770016C2BA11E341C6FE77768544169811D74F310F69D8F1C0DA4731179A305D900E
	15B4A2EF98476A6B305D840E2D2C47F65323917B329EF9F3B8D6D3056D76F06C0DAAECF710E34D5548BB1EE32F9C44F697F3ECE2A5363B1CE32FD6A2EFA247520EE03BCDBF62FB37A358EE8747322A10574A3170A1ECB70AE356AB7CDE460F703C72699059EB68DF4474FE1A2E626927AF374B795F5F187C45E565EF697D27094513CDBB48DED8FE37C637038CAFF02F7360389D147DBD2A096C61DC725E0A5970FDB70E6DB43EC7CA9DD00EED961F7F59890084F66F6CC4A15EBB6B50302372CE99219845DDBA12
	16DED45FBB4BBFC9FF7B478EA3546B4E5BBEBA3646C179A0A076EE7BE9A3694F7097718E5CBBC614E50906AC9823DDADFFCEF8517BDEDF7AFC35AC7B9BD8DC52A2112909495154006FB13267637B0A19A7BD7628EDC4998C73356D11A27837C725C286561E238E75B64EC73DF7517DF84FFC545BD20FEDCE56E8935BC23DA366FB6B9D6D53E6EF956A38106B183B5523E3D7B53637540F0EE902FF9DD7783477770328E3EA8C6A78E4A55131B086F5CC2844B65BE334F5445F29243FFB94632D633898F51BA5C778
	3B53985471CD050EBB2B789DD10D76889F995FF8CFD42DE324CFFBBF9FC29D67F11D822FF0FF75530672DEF28214C9DF60E923E0015ADFFF5BCB5E91AA6E931177C955CE51A45F7D699AD25E03B0ACE0F762DB9660FB1F21C2FCA7E1DE00B6D9C02E2248637E8D72F3BEF2DBBB69BDA16FF7F2A5E72D264E73AC7FE746313CD7E16D9B0EE37B1397E85FCDE0F23C385DA3C7E703729E822B67E2A35633086BF14F8E8F4F243A61E52F2D9F3B6CF756E31B99BF9ECE76EBF6FA6450D5794AFEC7B556D373E3147D9B
	03072730F2F85997D60EDD766D07304D41E1E55FDB64112376082F6C6DD5D8CFA417FD4DA79E1E77067C494E78A32FA07FF2BFF27817EDA7899B4A734ECB173D6EA2F83FDF25630135F7B79D13743B7ABF41BDC1E021B23EF086F047CFC6736E6C3363DE31D1608999955F3F9A15FC6140B3EFD4FCD36A15FC0B00E7592878A6D7AB799201A7ABF6B4FC1FF87D2ED1A170140F0A6F1FDEF14BA6606998955F93DEF1C489F8460F0A6F3EA1A55FE485CF84FC0E86DA2C2A076DF36EAC740D67CCA9740D7B549C77AD
	F77C38EF39DB9AFD4B5D5168DB6E31FA5FF2CF557B161BD36DDBEEEE35EF396AC33E656A8E7916132AFC4B8DD47916DBF845375C4F2F7816FBE2086F7BE3799E1F16A35F79CA64580BF65C27E73D0458EB8EBC8B143E046B7F6F68DE5D78925E95AE21F58D127C17707BA12F5A712EE7A4E0B1C04B0052DF8EC8B23C0CFCD997F01DB73E4CFFAFEEE8ACF3A41BDF74442D64F96CA97B686FBB26B8307DB3AF63FD47BD8E75FD47B78565FD45CE4770779DEFF3286FBBD6A7A97367BB063F6F387302F26E16630F0E
	313EDBE27F6F4F3616BF4039A07CF5A1CD92B6706BC7FA790E3FA4A4B71F17048FDBFB6C7DFAFAD9D9AF5FD6B6380AA4A1135CEB565708DD740CE23781D2EDB66B81F348DF92F1B905755EC6CE1A36B1B06B66FDFD49424ABAE1A5A86168B19D9752682F58B589491DAEC948EFA2AC3B00E5D7A7E159C599DB9D26CE716037426AAEE777D9DA9C247B366EDB280426AE88C3422AA6E10D54C3DF6142D2A1899BBDB5351017CDF246C1B779CFA20477E3E35FF7401F0B3026F9A1CEA1130BFD1C864A17DC5CD71172
	7B29A949C26AF1E1A58BEC9C97D2C9F4824427410B63C20AE4F7503A49A1C8101F19DE75477AE911A0EBE50EB51A1C5A6504E14AF9A11210C682A69570A457B460395673968ED2990A0DE785EFC6D0AA2328148CF825B802C224B543F07FE74BFA0C24C653FC0DAE607D3128DA657D1F020435FE3F33DE7A8ADBEB0C2F28FF3F71C37ADB8FBA40C3DF41F7A162171F897E3F97545AEB32DAA51375FC354DCC3EA3F4F4C092BD716F3CD6D23F8B4B4819727B27D6A277B9854F7F83D0CB8788DD77B86571A2GG90
	ECGGD0CB818294G94G88G88GD58429A8DD77B86571A2GG90ECGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGABA3GGGG
**end of data**/
}
/**
 * Return the ConstraintLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getConstraintLabel() {
	if (ivjConstraintLabel == null) {
		try {
			ivjConstraintLabel = new javax.swing.JLabel();
			ivjConstraintLabel.setName("ConstraintLabel");
			ivjConstraintLabel.setText("Constraint:");
			ivjConstraintLabel.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConstraintLabel;
}
/**
 * Return the ConstraintTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getConstraintTextField() {
	if (ivjConstraintTextField == null) {
		try {
			ivjConstraintTextField = new javax.swing.JTextField();
			ivjConstraintTextField.setName("ConstraintTextField");
			ivjConstraintTextField.setBorder(BorderFactory.createLoweredBevelBorder());
			ivjConstraintTextField.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConstraintTextField;
}
/**
 * Return the DescriptionLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getDescriptionLabel() {
	if (ivjDescriptionLabel == null) {
		try {
			ivjDescriptionLabel = new javax.swing.JLabel();
			ivjDescriptionLabel.setName("DescriptionLabel");
			ivjDescriptionLabel.setText("Description:");
			ivjDescriptionLabel.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDescriptionLabel;
}
/**
 * Return the DescriptionScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getDescriptionScrollPane() {
	if (ivjDescriptionScrollPane == null) {
		try {
			ivjDescriptionScrollPane = new javax.swing.JScrollPane();
			ivjDescriptionScrollPane.setName("DescriptionScrollPane");
			getDescriptionScrollPane().setViewportView(getDescriptionTextArea());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDescriptionScrollPane;
}
/**
 * Return the DescriptionTextArea property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextArea getDescriptionTextArea() {
	if (ivjDescriptionTextArea == null) {
		try {
			ivjDescriptionTextArea = new javax.swing.JTextArea();
			ivjDescriptionTextArea.setName("DescriptionTextArea");
			ivjDescriptionTextArea.setBorder(BorderFactory.createLoweredBevelBorder());
			ivjDescriptionTextArea.setBackground(new java.awt.Color(204,204,204));
			ivjDescriptionTextArea.setBounds(0, 0, 160, 120);
			ivjDescriptionTextArea.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDescriptionTextArea;
}
/**
 * Return the ErrorMessageButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getErrorMessageButton() {
	if (ivjErrorMessageButton == null) {
		try {
			ivjErrorMessageButton = new javax.swing.JButton();
			ivjErrorMessageButton.setName("ErrorMessageButton");
			ivjErrorMessageButton.setMnemonic('e');
			ivjErrorMessageButton.setText("Show Error Message(s)");
			ivjErrorMessageButton.setBackground(new java.awt.Color(204,204,255));
			ivjErrorMessageButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjErrorMessageButton;
}
/**
 * Return the GotoButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getGotoButton() {
	if (ivjGotoButton == null) {
		try {
			ivjGotoButton = new javax.swing.JButton();
			ivjGotoButton.setName("GotoButton");
			ivjGotoButton.setMnemonic('g');
			ivjGotoButton.setText("Goto Definition");
			ivjGotoButton.setBackground(new java.awt.Color(204,204,255));
			ivjGotoButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGotoButton;
}
/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameLabel() {
	if (ivjNameLabel == null) {
		try {
			ivjNameLabel = new javax.swing.JLabel();
			ivjNameLabel.setName("NameLabel");
			ivjNameLabel.setText("Name:");
			ivjNameLabel.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameLabel;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setBorder(BorderFactory.createLoweredBevelBorder());
			ivjNameTextField.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}
/**
 * Return the OkButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getOkButton() {
	if (ivjOkButton == null) {
		try {
			ivjOkButton = new javax.swing.JButton();
			ivjOkButton.setName("OkButton");
			ivjOkButton.setMnemonic('o');
			ivjOkButton.setText("Ok");
			ivjOkButton.setBackground(new java.awt.Color(204,204,255));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOkButton;
}
/**
 * Return the TypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeLabel() {
	if (ivjTypeLabel == null) {
		try {
			ivjTypeLabel = new javax.swing.JLabel();
			ivjTypeLabel.setName("TypeLabel");
			ivjTypeLabel.setText("Type:");
			ivjTypeLabel.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeLabel;
}
/**
 * Return the TypeTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getTypeTextField() {
	if (ivjTypeTextField == null) {
		try {
			ivjTypeTextField = new javax.swing.JTextField();
			ivjTypeTextField.setName("TypeTextField");
			ivjTypeTextField.setBorder(BorderFactory.createLoweredBevelBorder());
			ivjTypeTextField.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeTextField;
}
/**
 * Comment
 */
public void gotoButton_ActionEvents() {
	Assertion p = (Assertion) ((DefaultMutableTreeNode) getAssertionTree().getLastSelectedPathComponent()).getUserObject();
	Annotation a = p.getAnnotation();
	if (a instanceof LabeledStmtAnnotation) {
		a = CompilationManager.getAnnotationManager().getMethodAnnotationContainingAnnotation(a);
	}
	BUI.sessionPane.select(a, p);
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getOkButton().addActionListener(ivjEventHandler);
	getErrorMessageButton().addActionListener(ivjEventHandler);
	getAssertionTree().addTreeSelectionListener(ivjEventHandler);
	getGotoButton().addActionListener(ivjEventHandler);
	getAddButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("AssertionBrowser");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(529, 335);
		setTitle("Assertion Browser");
		setContentPane(getAssertionBrowserContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	updateTree();
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		PredicateBrowser aPredicateBrowser;
		aPredicateBrowser = new PredicateBrowser();
		aPredicateBrowser.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aPredicateBrowser.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JFrame");
		exception.printStackTrace(System.out);
	}
}
/**
 * 
 */
public void updateTree() {
	getAssertionTree().setModel(new DefaultTreeModel(buildTree(new DefaultMutableTreeNode("Assertion"), AssertionSet.getAssertionSetTable())));
	getAssertionScrollPane().validate();
	getAssertionScrollPane().repaint();
	//getAssertionBrowserSplitPane().resetToPreferredSizes();
}
}
