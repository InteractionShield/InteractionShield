package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class ANotEqualBinOp extends PBinOp
{
	private TNotEqual _notEqual_;

	public ANotEqualBinOp()
	{
	}
	public ANotEqualBinOp(
		TNotEqual _notEqual_)
	{
		setNotEqual(_notEqual_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseANotEqualBinOp(this);
	}
	public Object clone()
	{
		return new ANotEqualBinOp(
			(TNotEqual) cloneNode(_notEqual_));
	}
	public TNotEqual getNotEqual()
	{
		return _notEqual_;
	}
	void removeChild(Node child)
	{
		if(_notEqual_ == child)
		{
			_notEqual_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_notEqual_ == oldChild)
		{
			setNotEqual((TNotEqual) newChild);
			return;
		}

	}
	public void setNotEqual(TNotEqual node)
	{
		if(_notEqual_ != null)
		{
			_notEqual_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_notEqual_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_notEqual_);
	}
}
