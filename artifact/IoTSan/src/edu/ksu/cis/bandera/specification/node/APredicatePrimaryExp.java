package edu.ksu.cis.bandera.specification.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.analysis.*;

public final class APredicatePrimaryExp extends PPrimaryExp
{
	private PName _name_;
	private TLParen _lParen_;
	private PArgs _args_;
	private TRParen _rParen_;

	public APredicatePrimaryExp()
	{
	}
	public APredicatePrimaryExp(
		PName _name_,
		TLParen _lParen_,
		PArgs _args_,
		TRParen _rParen_)
	{
		setName(_name_);

		setLParen(_lParen_);

		setArgs(_args_);

		setRParen(_rParen_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAPredicatePrimaryExp(this);
	}
	public Object clone()
	{
		return new APredicatePrimaryExp(
			(PName) cloneNode(_name_),
			(TLParen) cloneNode(_lParen_),
			(PArgs) cloneNode(_args_),
			(TRParen) cloneNode(_rParen_));
	}
	public PArgs getArgs()
	{
		return _args_;
	}
	public TLParen getLParen()
	{
		return _lParen_;
	}
	public PName getName()
	{
		return _name_;
	}
	public TRParen getRParen()
	{
		return _rParen_;
	}
	void removeChild(Node child)
	{
		if(_name_ == child)
		{
			_name_ = null;
			return;
		}

		if(_lParen_ == child)
		{
			_lParen_ = null;
			return;
		}

		if(_args_ == child)
		{
			_args_ = null;
			return;
		}

		if(_rParen_ == child)
		{
			_rParen_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_name_ == oldChild)
		{
			setName((PName) newChild);
			return;
		}

		if(_lParen_ == oldChild)
		{
			setLParen((TLParen) newChild);
			return;
		}

		if(_args_ == oldChild)
		{
			setArgs((PArgs) newChild);
			return;
		}

		if(_rParen_ == oldChild)
		{
			setRParen((TRParen) newChild);
			return;
		}

	}
	public void setArgs(PArgs node)
	{
		if(_args_ != null)
		{
			_args_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_args_ = node;
	}
	public void setLParen(TLParen node)
	{
		if(_lParen_ != null)
		{
			_lParen_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_lParen_ = node;
	}
	public void setName(PName node)
	{
		if(_name_ != null)
		{
			_name_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_name_ = node;
	}
	public void setRParen(TRParen node)
	{
		if(_rParen_ != null)
		{
			_rParen_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_rParen_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_name_)
			+ toString(_lParen_)
			+ toString(_args_)
			+ toString(_rParen_);
	}
}
