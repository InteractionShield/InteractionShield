package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AUnsignedShiftRightBinOp extends PBinOp
{
	private TUnsignedShiftRight _unsignedShiftRight_;

	public AUnsignedShiftRightBinOp()
	{
	}
	public AUnsignedShiftRightBinOp(
		TUnsignedShiftRight _unsignedShiftRight_)
	{
		setUnsignedShiftRight(_unsignedShiftRight_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAUnsignedShiftRightBinOp(this);
	}
	public Object clone()
	{
		return new AUnsignedShiftRightBinOp(
			(TUnsignedShiftRight) cloneNode(_unsignedShiftRight_));
	}
	public TUnsignedShiftRight getUnsignedShiftRight()
	{
		return _unsignedShiftRight_;
	}
	void removeChild(Node child)
	{
		if(_unsignedShiftRight_ == child)
		{
			_unsignedShiftRight_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_unsignedShiftRight_ == oldChild)
		{
			setUnsignedShiftRight((TUnsignedShiftRight) newChild);
			return;
		}

	}
	public void setUnsignedShiftRight(TUnsignedShiftRight node)
	{
		if(_unsignedShiftRight_ != null)
		{
			_unsignedShiftRight_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_unsignedShiftRight_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_unsignedShiftRight_);
	}
}
