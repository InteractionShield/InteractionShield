package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AOrOrExp extends POrExp
{
	private POrExp _orExp_;
	private TOr _or_;
	private PAndExp _andExp_;

	public AOrOrExp()
	{
	}
	public AOrOrExp(
		POrExp _orExp_,
		TOr _or_,
		PAndExp _andExp_)
	{
		setOrExp(_orExp_);

		setOr(_or_);

		setAndExp(_andExp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAOrOrExp(this);
	}
	public Object clone()
	{
		return new AOrOrExp(
			(POrExp) cloneNode(_orExp_),
			(TOr) cloneNode(_or_),
			(PAndExp) cloneNode(_andExp_));
	}
	public PAndExp getAndExp()
	{
		return _andExp_;
	}
	public TOr getOr()
	{
		return _or_;
	}
	public POrExp getOrExp()
	{
		return _orExp_;
	}
	void removeChild(Node child)
	{
		if(_orExp_ == child)
		{
			_orExp_ = null;
			return;
		}

		if(_or_ == child)
		{
			_or_ = null;
			return;
		}

		if(_andExp_ == child)
		{
			_andExp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_orExp_ == oldChild)
		{
			setOrExp((POrExp) newChild);
			return;
		}

		if(_or_ == oldChild)
		{
			setOr((TOr) newChild);
			return;
		}

		if(_andExp_ == oldChild)
		{
			setAndExp((PAndExp) newChild);
			return;
		}

	}
	public void setAndExp(PAndExp node)
	{
		if(_andExp_ != null)
		{
			_andExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_andExp_ = node;
	}
	public void setOr(TOr node)
	{
		if(_or_ != null)
		{
			_or_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_or_ = node;
	}
	public void setOrExp(POrExp node)
	{
		if(_orExp_ != null)
		{
			_orExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_orExp_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_orExp_)
			+ toString(_or_)
			+ toString(_andExp_);
	}
}
