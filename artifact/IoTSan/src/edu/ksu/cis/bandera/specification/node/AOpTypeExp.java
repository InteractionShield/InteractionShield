package edu.ksu.cis.bandera.specification.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.analysis.*;

public final class AOpTypeExp extends PTypeExp
{
	private PPrimaryTypeExp _primaryTypeExp_;
	private PTypeOp _typeOp_;
	private PTypeExp _typeExp_;

	public AOpTypeExp()
	{
	}
	public AOpTypeExp(
		PPrimaryTypeExp _primaryTypeExp_,
		PTypeOp _typeOp_,
		PTypeExp _typeExp_)
	{
		setPrimaryTypeExp(_primaryTypeExp_);

		setTypeOp(_typeOp_);

		setTypeExp(_typeExp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAOpTypeExp(this);
	}
	public Object clone()
	{
		return new AOpTypeExp(
			(PPrimaryTypeExp) cloneNode(_primaryTypeExp_),
			(PTypeOp) cloneNode(_typeOp_),
			(PTypeExp) cloneNode(_typeExp_));
	}
	public PPrimaryTypeExp getPrimaryTypeExp()
	{
		return _primaryTypeExp_;
	}
	public PTypeExp getTypeExp()
	{
		return _typeExp_;
	}
	public PTypeOp getTypeOp()
	{
		return _typeOp_;
	}
	void removeChild(Node child)
	{
		if(_primaryTypeExp_ == child)
		{
			_primaryTypeExp_ = null;
			return;
		}

		if(_typeOp_ == child)
		{
			_typeOp_ = null;
			return;
		}

		if(_typeExp_ == child)
		{
			_typeExp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_primaryTypeExp_ == oldChild)
		{
			setPrimaryTypeExp((PPrimaryTypeExp) newChild);
			return;
		}

		if(_typeOp_ == oldChild)
		{
			setTypeOp((PTypeOp) newChild);
			return;
		}

		if(_typeExp_ == oldChild)
		{
			setTypeExp((PTypeExp) newChild);
			return;
		}

	}
	public void setPrimaryTypeExp(PPrimaryTypeExp node)
	{
		if(_primaryTypeExp_ != null)
		{
			_primaryTypeExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_primaryTypeExp_ = node;
	}
	public void setTypeExp(PTypeExp node)
	{
		if(_typeExp_ != null)
		{
			_typeExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_typeExp_ = node;
	}
	public void setTypeOp(PTypeOp node)
	{
		if(_typeOp_ != null)
		{
			_typeOp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_typeOp_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_primaryTypeExp_)
			+ toString(_typeOp_)
			+ toString(_typeExp_);
	}
}
