package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class ALessEqualBinOp extends PBinOp
{
	private TLessEqual _lessEqual_;

	public ALessEqualBinOp()
	{
	}
	public ALessEqualBinOp(
		TLessEqual _lessEqual_)
	{
		setLessEqual(_lessEqual_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseALessEqualBinOp(this);
	}
	public Object clone()
	{
		return new ALessEqualBinOp(
			(TLessEqual) cloneNode(_lessEqual_));
	}
	public TLessEqual getLessEqual()
	{
		return _lessEqual_;
	}
	void removeChild(Node child)
	{
		if(_lessEqual_ == child)
		{
			_lessEqual_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_lessEqual_ == oldChild)
		{
			setLessEqual((TLessEqual) newChild);
			return;
		}

	}
	public void setLessEqual(TLessEqual node)
	{
		if(_lessEqual_ != null)
		{
			_lessEqual_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_lessEqual_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_lessEqual_);
	}
}
