package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AShiftLeftBinOp extends PBinOp
{
	private TShiftLeft _shiftLeft_;

	public AShiftLeftBinOp()
	{
	}
	public AShiftLeftBinOp(
		TShiftLeft _shiftLeft_)
	{
		setShiftLeft(_shiftLeft_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAShiftLeftBinOp(this);
	}
	public Object clone()
	{
		return new AShiftLeftBinOp(
			(TShiftLeft) cloneNode(_shiftLeft_));
	}
	public TShiftLeft getShiftLeft()
	{
		return _shiftLeft_;
	}
	void removeChild(Node child)
	{
		if(_shiftLeft_ == child)
		{
			_shiftLeft_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_shiftLeft_ == oldChild)
		{
			setShiftLeft((TShiftLeft) newChild);
			return;
		}

	}
	public void setShiftLeft(TShiftLeft node)
	{
		if(_shiftLeft_ != null)
		{
			_shiftLeft_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_shiftLeft_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_shiftLeft_);
	}
}
