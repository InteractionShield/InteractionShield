package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class ACpl extends PCpl
{
	private TComma _comma_;
	private PParamList _paramList_;

	public ACpl()
	{
	}
	public ACpl(
		TComma _comma_,
		PParamList _paramList_)
	{
		setComma(_comma_);

		setParamList(_paramList_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseACpl(this);
	}
	public Object clone()
	{
		return new ACpl(
			(TComma) cloneNode(_comma_),
			(PParamList) cloneNode(_paramList_));
	}
	public TComma getComma()
	{
		return _comma_;
	}
	public PParamList getParamList()
	{
		return _paramList_;
	}
	void removeChild(Node child)
	{
		if(_comma_ == child)
		{
			_comma_ = null;
			return;
		}

		if(_paramList_ == child)
		{
			_paramList_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_comma_ == oldChild)
		{
			setComma((TComma) newChild);
			return;
		}

		if(_paramList_ == oldChild)
		{
			setParamList((PParamList) newChild);
			return;
		}

	}
	public void setComma(TComma node)
	{
		if(_comma_ != null)
		{
			_comma_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_comma_ = node;
	}
	public void setParamList(PParamList node)
	{
		if(_paramList_ != null)
		{
			_paramList_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_paramList_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_comma_)
			+ toString(_paramList_);
	}
}
