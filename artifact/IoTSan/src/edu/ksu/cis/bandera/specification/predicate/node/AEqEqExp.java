package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AEqEqExp extends PEqExp
{
	private PEqExp _eqExp_;
	private TEqual _equal_;
	private PRelExp _relExp_;

	public AEqEqExp()
	{
	}
	public AEqEqExp(
		PEqExp _eqExp_,
		TEqual _equal_,
		PRelExp _relExp_)
	{
		setEqExp(_eqExp_);

		setEqual(_equal_);

		setRelExp(_relExp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAEqEqExp(this);
	}
	public Object clone()
	{
		return new AEqEqExp(
			(PEqExp) cloneNode(_eqExp_),
			(TEqual) cloneNode(_equal_),
			(PRelExp) cloneNode(_relExp_));
	}
	public PEqExp getEqExp()
	{
		return _eqExp_;
	}
	public TEqual getEqual()
	{
		return _equal_;
	}
	public PRelExp getRelExp()
	{
		return _relExp_;
	}
	void removeChild(Node child)
	{
		if(_eqExp_ == child)
		{
			_eqExp_ = null;
			return;
		}

		if(_equal_ == child)
		{
			_equal_ = null;
			return;
		}

		if(_relExp_ == child)
		{
			_relExp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_eqExp_ == oldChild)
		{
			setEqExp((PEqExp) newChild);
			return;
		}

		if(_equal_ == oldChild)
		{
			setEqual((TEqual) newChild);
			return;
		}

		if(_relExp_ == oldChild)
		{
			setRelExp((PRelExp) newChild);
			return;
		}

	}
	public void setEqExp(PEqExp node)
	{
		if(_eqExp_ != null)
		{
			_eqExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_eqExp_ = node;
	}
	public void setEqual(TEqual node)
	{
		if(_equal_ != null)
		{
			_equal_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_equal_ = node;
	}
	public void setRelExp(PRelExp node)
	{
		if(_relExp_ != null)
		{
			_relExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_relExp_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_eqExp_)
			+ toString(_equal_)
			+ toString(_relExp_);
	}
}
