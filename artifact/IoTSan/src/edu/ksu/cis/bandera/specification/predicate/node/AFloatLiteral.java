package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AFloatLiteral extends PLiteral
{
	private TFloatLiteral _floatLiteral_;

	public AFloatLiteral()
	{
	}
	public AFloatLiteral(
		TFloatLiteral _floatLiteral_)
	{
		setFloatLiteral(_floatLiteral_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAFloatLiteral(this);
	}
	public Object clone()
	{
		return new AFloatLiteral(
			(TFloatLiteral) cloneNode(_floatLiteral_));
	}
	public TFloatLiteral getFloatLiteral()
	{
		return _floatLiteral_;
	}
	void removeChild(Node child)
	{
		if(_floatLiteral_ == child)
		{
			_floatLiteral_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_floatLiteral_ == oldChild)
		{
			setFloatLiteral((TFloatLiteral) newChild);
			return;
		}

	}
	public void setFloatLiteral(TFloatLiteral node)
	{
		if(_floatLiteral_ != null)
		{
			_floatLiteral_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_floatLiteral_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_floatLiteral_);
	}
}
