package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AConditionalExp extends PExp
{
	private PConditionalExp _conditionalExp_;

	public AConditionalExp()
	{
	}
	public AConditionalExp(
		PConditionalExp _conditionalExp_)
	{
		setConditionalExp(_conditionalExp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAConditionalExp(this);
	}
	public Object clone()
	{
		return new AConditionalExp(
			(PConditionalExp) cloneNode(_conditionalExp_));
	}
	public PConditionalExp getConditionalExp()
	{
		return _conditionalExp_;
	}
	void removeChild(Node child)
	{
		if(_conditionalExp_ == child)
		{
			_conditionalExp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_conditionalExp_ == oldChild)
		{
			setConditionalExp((PConditionalExp) newChild);
			return;
		}

	}
	public void setConditionalExp(PConditionalExp node)
	{
		if(_conditionalExp_ != null)
		{
			_conditionalExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_conditionalExp_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_conditionalExp_);
	}
}
