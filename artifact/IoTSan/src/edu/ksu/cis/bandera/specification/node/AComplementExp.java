package edu.ksu.cis.bandera.specification.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.analysis.*;

public final class AComplementExp extends PExp
{
	private TNot _not_;
	private PExp _exp_;

	public AComplementExp()
	{
	}
	public AComplementExp(
		TNot _not_,
		PExp _exp_)
	{
		setNot(_not_);

		setExp(_exp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAComplementExp(this);
	}
	public Object clone()
	{
		return new AComplementExp(
			(TNot) cloneNode(_not_),
			(PExp) cloneNode(_exp_));
	}
	public PExp getExp()
	{
		return _exp_;
	}
	public TNot getNot()
	{
		return _not_;
	}
	void removeChild(Node child)
	{
		if(_not_ == child)
		{
			_not_ = null;
			return;
		}

		if(_exp_ == child)
		{
			_exp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_not_ == oldChild)
		{
			setNot((TNot) newChild);
			return;
		}

		if(_exp_ == oldChild)
		{
			setExp((PExp) newChild);
			return;
		}

	}
	public void setExp(PExp node)
	{
		if(_exp_ != null)
		{
			_exp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_exp_ = node;
	}
	public void setNot(TNot node)
	{
		if(_not_ != null)
		{
			_not_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_not_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_not_)
			+ toString(_exp_);
	}
}
