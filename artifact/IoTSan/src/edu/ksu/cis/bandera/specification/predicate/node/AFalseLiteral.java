package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AFalseLiteral extends PLiteral
{
	private TFalse _false_;

	public AFalseLiteral()
	{
	}
	public AFalseLiteral(
		TFalse _false_)
	{
		setFalse(_false_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAFalseLiteral(this);
	}
	public Object clone()
	{
		return new AFalseLiteral(
			(TFalse) cloneNode(_false_));
	}
	public TFalse getFalse()
	{
		return _false_;
	}
	void removeChild(Node child)
	{
		if(_false_ == child)
		{
			_false_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_false_ == oldChild)
		{
			setFalse((TFalse) newChild);
			return;
		}

	}
	public void setFalse(TFalse node)
	{
		if(_false_ != null)
		{
			_false_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_false_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_false_);
	}
}
