package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class ASignedShiftRightBinOp extends PBinOp
{
	private TSignedShiftRight _signedShiftRight_;

	public ASignedShiftRightBinOp()
	{
	}
	public ASignedShiftRightBinOp(
		TSignedShiftRight _signedShiftRight_)
	{
		setSignedShiftRight(_signedShiftRight_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseASignedShiftRightBinOp(this);
	}
	public Object clone()
	{
		return new ASignedShiftRightBinOp(
			(TSignedShiftRight) cloneNode(_signedShiftRight_));
	}
	public TSignedShiftRight getSignedShiftRight()
	{
		return _signedShiftRight_;
	}
	void removeChild(Node child)
	{
		if(_signedShiftRight_ == child)
		{
			_signedShiftRight_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_signedShiftRight_ == oldChild)
		{
			setSignedShiftRight((TSignedShiftRight) newChild);
			return;
		}

	}
	public void setSignedShiftRight(TSignedShiftRight node)
	{
		if(_signedShiftRight_ != null)
		{
			_signedShiftRight_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_signedShiftRight_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_signedShiftRight_);
	}
}
