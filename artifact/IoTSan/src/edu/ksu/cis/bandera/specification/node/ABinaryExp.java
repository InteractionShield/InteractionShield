package edu.ksu.cis.bandera.specification.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.analysis.*;

public final class ABinaryExp extends PExp
{
	private PExp _left_;
	private PBinOp _binOp_;
	private PExp _right_;

	public ABinaryExp()
	{
	}
	public ABinaryExp(
		PExp _left_,
		PBinOp _binOp_,
		PExp _right_)
	{
		setLeft(_left_);

		setBinOp(_binOp_);

		setRight(_right_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseABinaryExp(this);
	}
	public Object clone()
	{
		return new ABinaryExp(
			(PExp) cloneNode(_left_),
			(PBinOp) cloneNode(_binOp_),
			(PExp) cloneNode(_right_));
	}
	public PBinOp getBinOp()
	{
		return _binOp_;
	}
	public PExp getLeft()
	{
		return _left_;
	}
	public PExp getRight()
	{
		return _right_;
	}
	void removeChild(Node child)
	{
		if(_left_ == child)
		{
			_left_ = null;
			return;
		}

		if(_binOp_ == child)
		{
			_binOp_ = null;
			return;
		}

		if(_right_ == child)
		{
			_right_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_left_ == oldChild)
		{
			setLeft((PExp) newChild);
			return;
		}

		if(_binOp_ == oldChild)
		{
			setBinOp((PBinOp) newChild);
			return;
		}

		if(_right_ == oldChild)
		{
			setRight((PExp) newChild);
			return;
		}

	}
	public void setBinOp(PBinOp node)
	{
		if(_binOp_ != null)
		{
			_binOp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_binOp_ = node;
	}
	public void setLeft(PExp node)
	{
		if(_left_ != null)
		{
			_left_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_left_ = node;
	}
	public void setRight(PExp node)
	{
		if(_right_ != null)
		{
			_right_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_right_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_left_)
			+ toString(_binOp_)
			+ toString(_right_);
	}
}
