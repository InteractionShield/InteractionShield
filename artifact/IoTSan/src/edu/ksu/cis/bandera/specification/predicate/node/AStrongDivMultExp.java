package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AStrongDivMultExp extends PMultExp
{
	private PMultExp _multExp_;
	private TStrongDiv _strongDiv_;
	private PUnaryExp _unaryExp_;

	public AStrongDivMultExp()
	{
	}
	public AStrongDivMultExp(
		PMultExp _multExp_,
		TStrongDiv _strongDiv_,
		PUnaryExp _unaryExp_)
	{
		setMultExp(_multExp_);

		setStrongDiv(_strongDiv_);

		setUnaryExp(_unaryExp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAStrongDivMultExp(this);
	}
	public Object clone()
	{
		return new AStrongDivMultExp(
			(PMultExp) cloneNode(_multExp_),
			(TStrongDiv) cloneNode(_strongDiv_),
			(PUnaryExp) cloneNode(_unaryExp_));
	}
	public PMultExp getMultExp()
	{
		return _multExp_;
	}
	public TStrongDiv getStrongDiv()
	{
		return _strongDiv_;
	}
	public PUnaryExp getUnaryExp()
	{
		return _unaryExp_;
	}
	void removeChild(Node child)
	{
		if(_multExp_ == child)
		{
			_multExp_ = null;
			return;
		}

		if(_strongDiv_ == child)
		{
			_strongDiv_ = null;
			return;
		}

		if(_unaryExp_ == child)
		{
			_unaryExp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_multExp_ == oldChild)
		{
			setMultExp((PMultExp) newChild);
			return;
		}

		if(_strongDiv_ == oldChild)
		{
			setStrongDiv((TStrongDiv) newChild);
			return;
		}

		if(_unaryExp_ == oldChild)
		{
			setUnaryExp((PUnaryExp) newChild);
			return;
		}

	}
	public void setMultExp(PMultExp node)
	{
		if(_multExp_ != null)
		{
			_multExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_multExp_ = node;
	}
	public void setStrongDiv(TStrongDiv node)
	{
		if(_strongDiv_ != null)
		{
			_strongDiv_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_strongDiv_ = node;
	}
	public void setUnaryExp(PUnaryExp node)
	{
		if(_unaryExp_ != null)
		{
			_unaryExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_unaryExp_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_multExp_)
			+ toString(_strongDiv_)
			+ toString(_unaryExp_);
	}
}
