package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class ANullLiteral extends PLiteral
{
	private TNull _null_;

	public ANullLiteral()
	{
	}
	public ANullLiteral(
		TNull _null_)
	{
		setNull(_null_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseANullLiteral(this);
	}
	public Object clone()
	{
		return new ANullLiteral(
			(TNull) cloneNode(_null_));
	}
	public TNull getNull()
	{
		return _null_;
	}
	void removeChild(Node child)
	{
		if(_null_ == child)
		{
			_null_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_null_ == oldChild)
		{
			setNull((TNull) newChild);
			return;
		}

	}
	public void setNull(TNull node)
	{
		if(_null_ != null)
		{
			_null_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_null_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_null_);
	}
}
