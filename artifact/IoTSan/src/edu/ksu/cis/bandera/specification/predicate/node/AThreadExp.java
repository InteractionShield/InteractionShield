package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AThreadExp extends PExp
{
	private TThread _thread_;

	public AThreadExp()
	{
	}
	public AThreadExp(
		TThread _thread_)
	{
		setThread(_thread_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAThreadExp(this);
	}
	public Object clone()
	{
		return new AThreadExp(
			(TThread) cloneNode(_thread_));
	}
	public TThread getThread()
	{
		return _thread_;
	}
	void removeChild(Node child)
	{
		if(_thread_ == child)
		{
			_thread_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_thread_ == oldChild)
		{
			setThread((TThread) newChild);
			return;
		}

	}
	public void setThread(TThread node)
	{
		if(_thread_ != null)
		{
			_thread_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_thread_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_thread_);
	}
}
