package edu.ksu.cis.bandera.specification.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.analysis.*;

public final class AAndAndExp extends PAndExp
{
	private PAndExp _andExp_;
	private TAnd _and_;
	private PUnaryExp _unaryExp_;

	public AAndAndExp()
	{
	}
	public AAndAndExp(
		PAndExp _andExp_,
		TAnd _and_,
		PUnaryExp _unaryExp_)
	{
		setAndExp(_andExp_);

		setAnd(_and_);

		setUnaryExp(_unaryExp_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAAndAndExp(this);
	}
	public Object clone()
	{
		return new AAndAndExp(
			(PAndExp) cloneNode(_andExp_),
			(TAnd) cloneNode(_and_),
			(PUnaryExp) cloneNode(_unaryExp_));
	}
	public TAnd getAnd()
	{
		return _and_;
	}
	public PAndExp getAndExp()
	{
		return _andExp_;
	}
	public PUnaryExp getUnaryExp()
	{
		return _unaryExp_;
	}
	void removeChild(Node child)
	{
		if(_andExp_ == child)
		{
			_andExp_ = null;
			return;
		}

		if(_and_ == child)
		{
			_and_ = null;
			return;
		}

		if(_unaryExp_ == child)
		{
			_unaryExp_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_andExp_ == oldChild)
		{
			setAndExp((PAndExp) newChild);
			return;
		}

		if(_and_ == oldChild)
		{
			setAnd((TAnd) newChild);
			return;
		}

		if(_unaryExp_ == oldChild)
		{
			setUnaryExp((PUnaryExp) newChild);
			return;
		}

	}
	public void setAnd(TAnd node)
	{
		if(_and_ != null)
		{
			_and_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_and_ = node;
	}
	public void setAndExp(PAndExp node)
	{
		if(_andExp_ != null)
		{
			_andExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_andExp_ = node;
	}
	public void setUnaryExp(PUnaryExp node)
	{
		if(_unaryExp_ != null)
		{
			_unaryExp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_unaryExp_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_andExp_)
			+ toString(_and_)
			+ toString(_unaryExp_);
	}
}
