package edu.ksu.cis.bandera.specification.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.analysis.*;

public final class AParenExp extends PExp
{
	private TLParen _lParen_;
	private PExp _exp_;
	private TRParen _rParen_;

	public AParenExp()
	{
	}
	public AParenExp(
		TLParen _lParen_,
		PExp _exp_,
		TRParen _rParen_)
	{
		setLParen(_lParen_);

		setExp(_exp_);

		setRParen(_rParen_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAParenExp(this);
	}
	public Object clone()
	{
		return new AParenExp(
			(TLParen) cloneNode(_lParen_),
			(PExp) cloneNode(_exp_),
			(TRParen) cloneNode(_rParen_));
	}
	public PExp getExp()
	{
		return _exp_;
	}
	public TLParen getLParen()
	{
		return _lParen_;
	}
	public TRParen getRParen()
	{
		return _rParen_;
	}
	void removeChild(Node child)
	{
		if(_lParen_ == child)
		{
			_lParen_ = null;
			return;
		}

		if(_exp_ == child)
		{
			_exp_ = null;
			return;
		}

		if(_rParen_ == child)
		{
			_rParen_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_lParen_ == oldChild)
		{
			setLParen((TLParen) newChild);
			return;
		}

		if(_exp_ == oldChild)
		{
			setExp((PExp) newChild);
			return;
		}

		if(_rParen_ == oldChild)
		{
			setRParen((TRParen) newChild);
			return;
		}

	}
	public void setExp(PExp node)
	{
		if(_exp_ != null)
		{
			_exp_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_exp_ = node;
	}
	public void setLParen(TLParen node)
	{
		if(_lParen_ != null)
		{
			_lParen_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_lParen_ = node;
	}
	public void setRParen(TRParen node)
	{
		if(_rParen_ != null)
		{
			_rParen_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_rParen_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_lParen_)
			+ toString(_exp_)
			+ toString(_rParen_);
	}
}
