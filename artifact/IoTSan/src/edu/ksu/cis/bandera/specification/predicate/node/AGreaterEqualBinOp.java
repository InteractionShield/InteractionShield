package edu.ksu.cis.bandera.specification.predicate.node;

/* This file was generated by SableCC (http://www.sablecc.org/). */

import java.util.*;
import edu.ksu.cis.bandera.specification.predicate.analysis.*;

public final class AGreaterEqualBinOp extends PBinOp
{
	private TGreaterEqual _greaterEqual_;

	public AGreaterEqualBinOp()
	{
	}
	public AGreaterEqualBinOp(
		TGreaterEqual _greaterEqual_)
	{
		setGreaterEqual(_greaterEqual_);

	}
	public void apply(Switch sw)
	{
		((Analysis) sw).caseAGreaterEqualBinOp(this);
	}
	public Object clone()
	{
		return new AGreaterEqualBinOp(
			(TGreaterEqual) cloneNode(_greaterEqual_));
	}
	public TGreaterEqual getGreaterEqual()
	{
		return _greaterEqual_;
	}
	void removeChild(Node child)
	{
		if(_greaterEqual_ == child)
		{
			_greaterEqual_ = null;
			return;
		}

	}
	void replaceChild(Node oldChild, Node newChild)
	{
		if(_greaterEqual_ == oldChild)
		{
			setGreaterEqual((TGreaterEqual) newChild);
			return;
		}

	}
	public void setGreaterEqual(TGreaterEqual node)
	{
		if(_greaterEqual_ != null)
		{
			_greaterEqual_.parent(null);
		}

		if(node != null)
		{
			if(node.parent() != null)
			{
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		_greaterEqual_ = node;
	}
	public String toString()
	{
		return ""
			+ toString(_greaterEqual_);
	}
}
