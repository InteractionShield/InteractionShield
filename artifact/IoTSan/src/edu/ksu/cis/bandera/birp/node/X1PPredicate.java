/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import edu.ksu.cis.bandera.birp.analysis.*;

public final class X1PPredicate extends XPPredicate
{
    private XPPredicate _xPPredicate_;
    private PPredicate _pPredicate_;

    public X1PPredicate()
    {
    }

    public X1PPredicate(
        XPPredicate _xPPredicate_,
        PPredicate _pPredicate_)
    {
        setXPPredicate(_xPPredicate_);
        setPPredicate(_pPredicate_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPPredicate getXPPredicate()
    {
        return _xPPredicate_;
    }

    public void setXPPredicate(XPPredicate node)
    {
        if(_xPPredicate_ != null)
        {
            _xPPredicate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPPredicate_ = node;
    }

    public PPredicate getPPredicate()
    {
        return _pPredicate_;
    }

    public void setPPredicate(PPredicate node)
    {
        if(_pPredicate_ != null)
        {
            _pPredicate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pPredicate_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPPredicate_ == child)
        {
            _xPPredicate_ = null;
        }

        if(_pPredicate_ == child)
        {
            _pPredicate_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPPredicate_) +
            toString(_pPredicate_);
    }
}
