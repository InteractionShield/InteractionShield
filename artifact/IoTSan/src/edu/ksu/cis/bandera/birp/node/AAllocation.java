/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import java.util.*;
import edu.ksu.cis.bandera.birp.analysis.*;

public final class AAllocation extends PAllocation
{
    private PLhs _lhs_;
    private TAssign _assign_;
    private TNew _new_;
    private TId _id_;
    private PArraylength _arraylength_;
    private TSemicolon _semicolon_;

    public AAllocation()
    {
    }

    public AAllocation(
        PLhs _lhs_,
        TAssign _assign_,
        TNew _new_,
        TId _id_,
        PArraylength _arraylength_,
        TSemicolon _semicolon_)
    {
        setLhs(_lhs_);

        setAssign(_assign_);

        setNew(_new_);

        setId(_id_);

        setArraylength(_arraylength_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new AAllocation(
            (PLhs) cloneNode(_lhs_),
            (TAssign) cloneNode(_assign_),
            (TNew) cloneNode(_new_),
            (TId) cloneNode(_id_),
            (PArraylength) cloneNode(_arraylength_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAllocation(this);
    }

    public PLhs getLhs()
    {
        return _lhs_;
    }

    public void setLhs(PLhs node)
    {
        if(_lhs_ != null)
        {
            _lhs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lhs_ = node;
    }

    public TAssign getAssign()
    {
        return _assign_;
    }

    public void setAssign(TAssign node)
    {
        if(_assign_ != null)
        {
            _assign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _assign_ = node;
    }

    public TNew getNew()
    {
        return _new_;
    }

    public void setNew(TNew node)
    {
        if(_new_ != null)
        {
            _new_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _new_ = node;
    }

    public TId getId()
    {
        return _id_;
    }

    public void setId(TId node)
    {
        if(_id_ != null)
        {
            _id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _id_ = node;
    }

    public PArraylength getArraylength()
    {
        return _arraylength_;
    }

    public void setArraylength(PArraylength node)
    {
        if(_arraylength_ != null)
        {
            _arraylength_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _arraylength_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lhs_)
            + toString(_assign_)
            + toString(_new_)
            + toString(_id_)
            + toString(_arraylength_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if(_lhs_ == child)
        {
            _lhs_ = null;
            return;
        }

        if(_assign_ == child)
        {
            _assign_ = null;
            return;
        }

        if(_new_ == child)
        {
            _new_ = null;
            return;
        }

        if(_id_ == child)
        {
            _id_ = null;
            return;
        }

        if(_arraylength_ == child)
        {
            _arraylength_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lhs_ == oldChild)
        {
            setLhs((PLhs) newChild);
            return;
        }

        if(_assign_ == oldChild)
        {
            setAssign((TAssign) newChild);
            return;
        }

        if(_new_ == oldChild)
        {
            setNew((TNew) newChild);
            return;
        }

        if(_id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(_arraylength_ == oldChild)
        {
            setArraylength((PArraylength) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }
}
