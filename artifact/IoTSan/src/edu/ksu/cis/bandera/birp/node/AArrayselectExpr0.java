/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import java.util.*;
import edu.ksu.cis.bandera.birp.analysis.*;

public final class AArrayselectExpr0 extends PExpr0
{
    private PExpr0 _expr0_;
    private TLbrack _lbrack_;
    private PExpr _expr_;
    private TRbrack _rbrack_;

    public AArrayselectExpr0()
    {
    }

    public AArrayselectExpr0(
        PExpr0 _expr0_,
        TLbrack _lbrack_,
        PExpr _expr_,
        TRbrack _rbrack_)
    {
        setExpr0(_expr0_);

        setLbrack(_lbrack_);

        setExpr(_expr_);

        setRbrack(_rbrack_);

    }
    public Object clone()
    {
        return new AArrayselectExpr0(
            (PExpr0) cloneNode(_expr0_),
            (TLbrack) cloneNode(_lbrack_),
            (PExpr) cloneNode(_expr_),
            (TRbrack) cloneNode(_rbrack_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayselectExpr0(this);
    }

    public PExpr0 getExpr0()
    {
        return _expr0_;
    }

    public void setExpr0(PExpr0 node)
    {
        if(_expr0_ != null)
        {
            _expr0_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expr0_ = node;
    }

    public TLbrack getLbrack()
    {
        return _lbrack_;
    }

    public void setLbrack(TLbrack node)
    {
        if(_lbrack_ != null)
        {
            _lbrack_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lbrack_ = node;
    }

    public PExpr getExpr()
    {
        return _expr_;
    }

    public void setExpr(PExpr node)
    {
        if(_expr_ != null)
        {
            _expr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expr_ = node;
    }

    public TRbrack getRbrack()
    {
        return _rbrack_;
    }

    public void setRbrack(TRbrack node)
    {
        if(_rbrack_ != null)
        {
            _rbrack_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rbrack_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_expr0_)
            + toString(_lbrack_)
            + toString(_expr_)
            + toString(_rbrack_);
    }

    void removeChild(Node child)
    {
        if(_expr0_ == child)
        {
            _expr0_ = null;
            return;
        }

        if(_lbrack_ == child)
        {
            _lbrack_ = null;
            return;
        }

        if(_expr_ == child)
        {
            _expr_ = null;
            return;
        }

        if(_rbrack_ == child)
        {
            _rbrack_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_expr0_ == oldChild)
        {
            setExpr0((PExpr0) newChild);
            return;
        }

        if(_lbrack_ == oldChild)
        {
            setLbrack((TLbrack) newChild);
            return;
        }

        if(_expr_ == oldChild)
        {
            setExpr((PExpr) newChild);
            return;
        }

        if(_rbrack_ == oldChild)
        {
            setRbrack((TRbrack) newChild);
            return;
        }

    }
}
