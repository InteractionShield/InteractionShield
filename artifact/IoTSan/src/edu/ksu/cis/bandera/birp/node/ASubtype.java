/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import java.util.*;
import edu.ksu.cis.bandera.birp.analysis.*;

public final class ASubtype extends PSubtype
{
    private TId _subclass_;
    private TExtendz _extendz_;
    private TId _superclass_;
    private TSemicolon _semicolon_;

    public ASubtype()
    {
    }

    public ASubtype(
        TId _subclass_,
        TExtendz _extendz_,
        TId _superclass_,
        TSemicolon _semicolon_)
    {
        setSubclass(_subclass_);

        setExtendz(_extendz_);

        setSuperclass(_superclass_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new ASubtype(
            (TId) cloneNode(_subclass_),
            (TExtendz) cloneNode(_extendz_),
            (TId) cloneNode(_superclass_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubtype(this);
    }

    public TId getSubclass()
    {
        return _subclass_;
    }

    public void setSubclass(TId node)
    {
        if(_subclass_ != null)
        {
            _subclass_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _subclass_ = node;
    }

    public TExtendz getExtendz()
    {
        return _extendz_;
    }

    public void setExtendz(TExtendz node)
    {
        if(_extendz_ != null)
        {
            _extendz_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _extendz_ = node;
    }

    public TId getSuperclass()
    {
        return _superclass_;
    }

    public void setSuperclass(TId node)
    {
        if(_superclass_ != null)
        {
            _superclass_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _superclass_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_subclass_)
            + toString(_extendz_)
            + toString(_superclass_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if(_subclass_ == child)
        {
            _subclass_ = null;
            return;
        }

        if(_extendz_ == child)
        {
            _extendz_ = null;
            return;
        }

        if(_superclass_ == child)
        {
            _superclass_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_subclass_ == oldChild)
        {
            setSubclass((TId) newChild);
            return;
        }

        if(_extendz_ == oldChild)
        {
            setExtendz((TExtendz) newChild);
            return;
        }

        if(_superclass_ == oldChild)
        {
            setSuperclass((TId) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }
}
