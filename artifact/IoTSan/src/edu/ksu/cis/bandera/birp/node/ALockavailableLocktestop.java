/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import java.util.*;
import edu.ksu.cis.bandera.birp.analysis.*;

public final class ALockavailableLocktestop extends PLocktestop
{
    private TLockavailable _lockavailable_;

    public ALockavailableLocktestop()
    {
    }

    public ALockavailableLocktestop(
        TLockavailable _lockavailable_)
    {
        setLockavailable(_lockavailable_);

    }
    public Object clone()
    {
        return new ALockavailableLocktestop(
            (TLockavailable) cloneNode(_lockavailable_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALockavailableLocktestop(this);
    }

    public TLockavailable getLockavailable()
    {
        return _lockavailable_;
    }

    public void setLockavailable(TLockavailable node)
    {
        if(_lockavailable_ != null)
        {
            _lockavailable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lockavailable_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lockavailable_);
    }

    void removeChild(Node child)
    {
        if(_lockavailable_ == child)
        {
            _lockavailable_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lockavailable_ == oldChild)
        {
            setLockavailable((TLockavailable) newChild);
            return;
        }

    }
}
