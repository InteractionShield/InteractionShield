/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import edu.ksu.cis.bandera.birp.analysis.*;

public final class X1PThread extends XPThread
{
    private XPThread _xPThread_;
    private PThread _pThread_;

    public X1PThread()
    {
    }

    public X1PThread(
        XPThread _xPThread_,
        PThread _pThread_)
    {
        setXPThread(_xPThread_);
        setPThread(_pThread_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPThread getXPThread()
    {
        return _xPThread_;
    }

    public void setXPThread(XPThread node)
    {
        if(_xPThread_ != null)
        {
            _xPThread_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPThread_ = node;
    }

    public PThread getPThread()
    {
        return _pThread_;
    }

    public void setPThread(PThread node)
    {
        if(_pThread_ != null)
        {
            _pThread_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pThread_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPThread_ == child)
        {
            _xPThread_ = null;
        }

        if(_pThread_ == child)
        {
            _pThread_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPThread_) +
            toString(_pThread_);
    }
}
