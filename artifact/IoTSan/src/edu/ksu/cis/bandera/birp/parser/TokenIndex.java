/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.parser;

import edu.ksu.cis.bandera.birp.node.*;
import edu.ksu.cis.bandera.birp.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTSemicolon(TSemicolon node)
    {
        index = 0;
    }

    public void caseTColon(TColon node)
    {
        index = 1;
    }

    public void caseTLbrace(TLbrace node)
    {
        index = 2;
    }

    public void caseTRbrace(TRbrace node)
    {
        index = 3;
    }

    public void caseTLparen(TLparen node)
    {
        index = 4;
    }

    public void caseTRparen(TRparen node)
    {
        index = 5;
    }

    public void caseTLbrack(TLbrack node)
    {
        index = 6;
    }

    public void caseTRbrack(TRbrack node)
    {
        index = 7;
    }

    public void caseTBar(TBar node)
    {
        index = 8;
    }

    public void caseTAt(TAt node)
    {
        index = 9;
    }

    public void caseTComma(TComma node)
    {
        index = 10;
    }

    public void caseTDot(TDot node)
    {
        index = 11;
    }

    public void caseTDotdot(TDotdot node)
    {
        index = 12;
    }

    public void caseTPlus(TPlus node)
    {
        index = 13;
    }

    public void caseTMinus(TMinus node)
    {
        index = 14;
    }

    public void caseTMult(TMult node)
    {
        index = 15;
    }

    public void caseTDiv(TDiv node)
    {
        index = 16;
    }

    public void caseTMod(TMod node)
    {
        index = 17;
    }

    public void caseTAnd(TAnd node)
    {
        index = 18;
    }

    public void caseTOr(TOr node)
    {
        index = 19;
    }

    public void caseTEq(TEq node)
    {
        index = 20;
    }

    public void caseTEquals(TEquals node)
    {
        index = 21;
    }

    public void caseTNot(TNot node)
    {
        index = 22;
    }

    public void caseTNoteq(TNoteq node)
    {
        index = 23;
    }

    public void caseTLt(TLt node)
    {
        index = 24;
    }

    public void caseTGt(TGt node)
    {
        index = 25;
    }

    public void caseTLe(TLe node)
    {
        index = 26;
    }

    public void caseTGe(TGe node)
    {
        index = 27;
    }

    public void caseTAssign(TAssign node)
    {
        index = 28;
    }

    public void caseTAssert(TAssert node)
    {
        index = 29;
    }

    public void caseTBoolean(TBoolean node)
    {
        index = 30;
    }

    public void caseTTid(TTid node)
    {
        index = 31;
    }

    public void caseTTrue(TTrue node)
    {
        index = 32;
    }

    public void caseTFalse(TFalse node)
    {
        index = 33;
    }

    public void caseTProcess(TProcess node)
    {
        index = 34;
    }

    public void caseTEnd(TEnd node)
    {
        index = 35;
    }

    public void caseTRange(TRange node)
    {
        index = 36;
    }

    public void caseTLock(TLock node)
    {
        index = 37;
    }

    public void caseTReentrant(TReentrant node)
    {
        index = 38;
    }

    public void caseTArray(TArray node)
    {
        index = 39;
    }

    public void caseTOf(TOf node)
    {
        index = 40;
    }

    public void caseTLength(TLength node)
    {
        index = 41;
    }

    public void caseTExtendz(TExtendz node)
    {
        index = 42;
    }

    public void caseTInstanceof(TInstanceof node)
    {
        index = 43;
    }

    public void caseTRecord(TRecord node)
    {
        index = 44;
    }

    public void caseTCollection(TCollection node)
    {
        index = 45;
    }

    public void caseTRef(TRef node)
    {
        index = 46;
    }

    public void caseTNew(TNew node)
    {
        index = 47;
    }

    public void caseTNull(TNull node)
    {
        index = 48;
    }

    public void caseTEnum(TEnum node)
    {
        index = 49;
    }

    public void caseTMain(TMain node)
    {
        index = 50;
    }

    public void caseTThread(TThread node)
    {
        index = 51;
    }

    public void caseTLoc(TLoc node)
    {
        index = 52;
    }

    public void caseTLive(TLive node)
    {
        index = 53;
    }

    public void caseTWhen(TWhen node)
    {
        index = 54;
    }

    public void caseTDo(TDo node)
    {
        index = 55;
    }

    public void caseTInvisible(TInvisible node)
    {
        index = 56;
    }

    public void caseTGoto(TGoto node)
    {
        index = 57;
    }

    public void caseTUnlock(TUnlock node)
    {
        index = 58;
    }

    public void caseTWait(TWait node)
    {
        index = 59;
    }

    public void caseTUnwait(TUnwait node)
    {
        index = 60;
    }

    public void caseTNotify(TNotify node)
    {
        index = 61;
    }

    public void caseTNotifyall(TNotifyall node)
    {
        index = 62;
    }

    public void caseTLockavailable(TLockavailable node)
    {
        index = 63;
    }

    public void caseTStart(TStart node)
    {
        index = 64;
    }

    public void caseTJoin(TJoin node)
    {
        index = 65;
    }

    public void caseTExit(TExit node)
    {
        index = 66;
    }

    public void caseTThreadterminated(TThreadterminated node)
    {
        index = 67;
    }

    public void caseTInternchoose(TInternchoose node)
    {
        index = 68;
    }

    public void caseTExternchoose(TExternchoose node)
    {
        index = 69;
    }

    public void caseTForall(TForall node)
    {
        index = 70;
    }

    public void caseTHaslock(THaslock node)
    {
        index = 71;
    }

    public void caseTWasnotified(TWasnotified node)
    {
        index = 72;
    }

    public void caseTPrintln(TPrintln node)
    {
        index = 73;
    }

    public void caseTPredicates(TPredicates node)
    {
        index = 74;
    }

    public void caseTId(TId node)
    {
        index = 75;
    }

    public void caseTInt(TInt node)
    {
        index = 76;
    }

    public void caseTString(TString node)
    {
        index = 77;
    }

    public void caseEOF(EOF node)
    {
        index = 78;
    }
}
