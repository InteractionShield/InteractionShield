/* This file was generated by SableCC (http://www.sablecc.org/). */

package edu.ksu.cis.bandera.birp.node;

import java.util.*;
import edu.ksu.cis.bandera.birp.analysis.*;

public final class AEmptyLiveset extends PLiveset
{
    private TLive _live_;
    private TLbrace _lbrace_;
    private TRbrace _rbrace_;

    public AEmptyLiveset()
    {
    }

    public AEmptyLiveset(
        TLive _live_,
        TLbrace _lbrace_,
        TRbrace _rbrace_)
    {
        setLive(_live_);

        setLbrace(_lbrace_);

        setRbrace(_rbrace_);

    }
    public Object clone()
    {
        return new AEmptyLiveset(
            (TLive) cloneNode(_live_),
            (TLbrace) cloneNode(_lbrace_),
            (TRbrace) cloneNode(_rbrace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEmptyLiveset(this);
    }

    public TLive getLive()
    {
        return _live_;
    }

    public void setLive(TLive node)
    {
        if(_live_ != null)
        {
            _live_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _live_ = node;
    }

    public TLbrace getLbrace()
    {
        return _lbrace_;
    }

    public void setLbrace(TLbrace node)
    {
        if(_lbrace_ != null)
        {
            _lbrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lbrace_ = node;
    }

    public TRbrace getRbrace()
    {
        return _rbrace_;
    }

    public void setRbrace(TRbrace node)
    {
        if(_rbrace_ != null)
        {
            _rbrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rbrace_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_live_)
            + toString(_lbrace_)
            + toString(_rbrace_);
    }

    void removeChild(Node child)
    {
        if(_live_ == child)
        {
            _live_ = null;
            return;
        }

        if(_lbrace_ == child)
        {
            _lbrace_ = null;
            return;
        }

        if(_rbrace_ == child)
        {
            _rbrace_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_live_ == oldChild)
        {
            setLive((TLive) newChild);
            return;
        }

        if(_lbrace_ == oldChild)
        {
            setLbrace((TLbrace) newChild);
            return;
        }

        if(_rbrace_ == oldChild)
        {
            setRbrace((TRbrace) newChild);
            return;
        }

    }
}
